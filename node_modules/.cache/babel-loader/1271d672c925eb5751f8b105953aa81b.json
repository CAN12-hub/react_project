{"ast":null,"code":"var _jsxFileName = \"/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/chart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { format } from 'date-fns';\nimport Post from \"../components/Post\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Chart = () => {\n  _s();\n  const [setCharts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", {\n      mode: \"cors\"\n    }).then(response => {\n      console.log(\"response is:\" + response);\n      return response.json();\n    }).then(data => {\n      //setCharts(data);\n      //setLoading(false);\n      //console.log(data);\n      //console.log(\"meta is:\"+ JSON.stringify(data.data.meta));\n      let startTime = data.data.meta.dateRange.startTime.split('T')[0] + '\"';\n      let endTime = data.data.meta.dateRange.endTime.split('T')[0] + '\"';\n      //console.log(\"startTime:\"+ startTime.split('T')[0]+'\"');\n      //console.log(\"endTime is:\"+endTime.split('T')[0]+'\"');\n      console.log(\"getDates is:\" + getDaysArray(startTime, endTime));\n      // console.log(\"formatted start date is:\"+ formatDate(startTime));\n      // console.log(\"formatted end date is:\"+ formatDate(endTime));\n    });\n\n    function formatDate(string) {\n      var options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(string).toLocaleDateString([], options);\n    }\n    var getDaysArray = function (start, end) {\n      for (var arr = [], dt = new Date(start); dt <= new Date(end); dt.setDate(dt.getDate() + 1)) {\n        console.log(\"date pushed is:\" + format(new Date(dt), 'MM/dd/yyyy'));\n        arr.push(format(new Date(dt), 'MM/dd/yyyy'));\n      }\n      console.log(\"array is:\" + arr);\n      return arr;\n    };\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"loading screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: posts.map(e => /*#__PURE__*/_jsxDEV(Post, {\n      data: e\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"MCid2rCLFCEtRJzMv5sckUSsHk0=\");\n_c = Chart;\nconst Chart2 = () => {\n  _s2();\n  var arrChart = [];\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  };\n  useEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", {\n      mode: \"cors\"\n    }).then(response => {\n      console.log(\"response is:\" + response);\n      return response.json();\n    }).then(dataRes => {\n      let startTime = dataRes.data.meta.dateRange.startTime.split('T')[0] + '\"';\n      let endTime = dataRes.data.meta.dateRange.endTime.split('T')[0] + '\"';\n      // console.log(\"getDates is:\"+getDaysArray(startTime,endTime));\n      for (var arr = [], dt = new Date(startTime); dt <= new Date(endTime); dt.setDate(dt.getDate() + 1)) {\n        arr.push(format(new Date(dt), 'MM/dd/yyyy').toString());\n        arrChart = arr;\n      }\n    });\n  });\n  const labels = [arrChart];\n  console.log(\"lables are:\" + arrChart);\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: labels.map(() => 500),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }, {\n      label: 'Dataset 2',\n      data: labels.map(() => 100),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 8\n  }, this);\n};\n_s2(Chart2, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Chart2;\nexport default Chart2;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"Chart2\");","map":{"version":3,"names":["useEffect","useState","Container","format","Post","React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","setCharts","loading","setLoading","fetch","mode","then","response","console","log","json","data","startTime","meta","dateRange","split","endTime","getDaysArray","formatDate","string","options","year","month","day","Date","toLocaleDateString","start","end","arr","dt","setDate","getDate","push","posts","map","e","Chart2","arrChart","responsive","plugins","title","display","text","dataRes","toString","labels","datasets","label","borderColor","backgroundColor"],"sources":["/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/chart.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { format } from 'date-fns'\nimport Post from \"../components/Post\";\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\nconst Chart = () => {\n  const [setCharts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\t\n\tuseEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", { mode: \"cors\" })\n      .then((response) => {\n        console.log(\"response is:\"+response);\n        return response.json();\n      })\n      .then((data) => {\n        //setCharts(data);\n        //setLoading(false);\n        //console.log(data);\n        //console.log(\"meta is:\"+ JSON.stringify(data.data.meta));\n        let startTime=data.data.meta.dateRange.startTime.split('T')[0]+'\"';\n        let endTime=data.data.meta.dateRange.endTime.split('T')[0]+'\"';\n        //console.log(\"startTime:\"+ startTime.split('T')[0]+'\"');\n        //console.log(\"endTime is:\"+endTime.split('T')[0]+'\"');\n        console.log(\"getDates is:\"+getDaysArray(startTime,endTime));\n       // console.log(\"formatted start date is:\"+ formatDate(startTime));\n       // console.log(\"formatted end date is:\"+ formatDate(endTime));\n        \n      });\n\n      function formatDate(string){\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(string).toLocaleDateString([],options);\n    }\n\n      var getDaysArray = function(start, end) {\n        for(var arr=[],dt=new Date(start); \n          dt<=new Date(end); \n          dt.setDate(dt.getDate()+1)){\n            console.log(\"date pushed is:\"+ format(new Date(dt), 'MM/dd/yyyy'));\n            arr.push(format(new Date(dt), 'MM/dd/yyyy'));\n        }\n        console.log(\"array is:\"+arr);\n        return arr;\n    };\n\n  });\n\n  if (loading) {\n    return <Container>loading screen</Container>;\n  }\n  return (\n    <Container>\n      {posts.map((e) => (\n        <Post data={e}></Post>\n      ))}\n    </Container>\n  );\n};\n\n\nconst Chart2 = () => {\n  var arrChart=[];\n  const options = {\n   responsive: true,\n   plugins: {\n     title: {\n       display: true,\n       text: 'Chart.js Line Chart',\n     },\n   },\n };\n useEffect(() => {\n  fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", { mode: \"cors\" })\n    .then((response) => {\n      console.log(\"response is:\"+response);\n      return response.json();\n    })\n    .then((dataRes) => {\n      let startTime=dataRes.data.meta.dateRange.startTime.split('T')[0]+'\"';\n      let endTime=dataRes.data.meta.dateRange.endTime.split('T')[0]+'\"';\n     // console.log(\"getDates is:\"+getDaysArray(startTime,endTime));\n     for(var arr=[],dt=new Date(startTime); \n      dt<=new Date(endTime); \n      dt.setDate(dt.getDate()+1)){\n      arr.push(format(new Date(dt), 'MM/dd/yyyy').toString());\n      arrChart=arr;\n    }      \n    });\n});\nconst labels = [arrChart];\nconsole.log(\"lables are:\"+arrChart);\nconst data = {\n  labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: labels.map(() => 500),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    },\n    {\n      label: 'Dataset 2',\n      data: labels.map(() => 100),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n    },\n  ],\n};\n\nreturn <Line options={options} data={data} />;\n }\n\n export default Chart2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}