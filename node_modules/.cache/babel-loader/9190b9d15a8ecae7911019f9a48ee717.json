{"ast":null,"code":"var _jsxFileName = \"/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/attackLayer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { format } from 'date-fns';\nimport Post from \"../components/Post\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst AttackChart = () => {\n  _s();\n  const [content, setContent] = useState({});\n  const [loading, setLoading] = useState(true);\n  var labels, data, arrChart;\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Attack Layer'\n      }\n    }\n  };\n  useEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", {\n      mode: \"cors\"\n    }).then(response => {\n      return response.json();\n    }).then(dataRes => {\n      let startTime = dataRes.data.meta.dateRange.startTime.split('T')[0] + '\"';\n      let endTime = dataRes.data.meta.dateRange.endTime.split('T')[0] + '\"';\n      arrChart = getDaysArray(startTime, endTime);\n      labels = dataRes.data.total.timestamps;\n      dataRes.data.total.timestamps = dataRes.data.total.timestamps.map(element => {\n        console.log(element);\n      });\n      const result = dataRes.data.total.values.map(element => {\n        return element * 100;\n      });\n      data = {\n        labels,\n        datasets: [{\n          label: 'Percentage',\n          data: result,\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)'\n        }]\n      };\n      setContent(data);\n      setLoading(false);\n    });\n    var getDaysArray = function (start, end) {\n      for (var arr = [], dt = new Date(start); dt <= new Date(end); dt.setDate(dt.getDate() + 1)) {\n        arr.push(format(new Date(dt), 'MM/dd/yyyy'));\n      }\n      return arr;\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"loading screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"TASK 3:\", /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AttackChart, \"KC7p3+cA2gzMK8Z2JbraU/FoTXc=\");\n_c = AttackChart;\nexport default AttackChart;\nvar _c;\n$RefreshReg$(_c, \"AttackChart\");","map":{"version":3,"names":["useEffect","useState","Container","format","Post","React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","AttackChart","content","setContent","loading","setLoading","labels","data","arrChart","options","responsive","plugins","title","display","text","fetch","mode","then","response","json","dataRes","startTime","meta","dateRange","split","endTime","getDaysArray","total","timestamps","map","element","console","log","result","values","datasets","label","borderColor","backgroundColor","start","end","arr","dt","Date","setDate","getDate","push"],"sources":["/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/attackLayer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { format } from 'date-fns'\nimport Post from \"../components/Post\";\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst AttackChart = () => {\n  const [content, setContent] = useState({});\n  const [loading, setLoading] = useState(true);\n  var labels,data,arrChart;\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Attack Layer',\n      },\n    },\n  };\n\tuseEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", { mode: \"cors\" })\n    .then((response) => {\n      return response.json();\n    })  \n    .then((dataRes) => {\n        let startTime=dataRes.data.meta.dateRange.startTime.split('T')[0]+'\"';\n        let endTime=dataRes.data.meta.dateRange.endTime.split('T')[0]+'\"';\n        arrChart=getDaysArray(startTime,endTime);\n        labels = dataRes.data.total.timestamps;\n        dataRes.data.total.timestamps=dataRes.data.total.timestamps.map(element => {\n            console.log(element);\n          });\n        const result = dataRes.data.total.values.map(element => {\n          return element *100;\n        });\n        data = {\n          labels,\n          datasets: [\n            {\n              label: 'Percentage',\n              data: result,\n              borderColor: 'rgb(255, 99, 132)',\n              backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            },\n          ],\n        };\n        setContent(data);\n        setLoading(false);\n    });\n    var getDaysArray = function(start, end) {\n        for(var arr=[],dt=new Date(start); \n          dt<=new Date(end); \n          dt.setDate(dt.getDate()+1)){\n            arr.push(format(new Date(dt), 'MM/dd/yyyy'));\n        }\n        return arr;\n    };\n  },[]);\n\n  if (loading) {\n    return <Container>loading screen</Container>;\n  }\n  return (\n    <Container>\n        TASK 3: \n       <Line options={options} data={content} />\n       <hr></hr>\n    </Container>\n  );\n};\n \n\n export default AttackChart;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AAEvCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAED,MAAMG,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,IAAIqB,MAAM,EAACC,IAAI,EAACC,QAAQ;EACxB,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACF9B,SAAS,CAAC,MAAM;IACb+B,KAAK,CAAC,oDAAoD,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC,CAC5EC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,OAAO,IAAK;MACf,IAAIC,SAAS,GAACD,OAAO,CAACb,IAAI,CAACe,IAAI,CAACC,SAAS,CAACF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG;MACrE,IAAIC,OAAO,GAACL,OAAO,CAACb,IAAI,CAACe,IAAI,CAACC,SAAS,CAACE,OAAO,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG;MACjEhB,QAAQ,GAACkB,YAAY,CAACL,SAAS,EAACI,OAAO,CAAC;MACxCnB,MAAM,GAAGc,OAAO,CAACb,IAAI,CAACoB,KAAK,CAACC,UAAU;MACtCR,OAAO,CAACb,IAAI,CAACoB,KAAK,CAACC,UAAU,GAACR,OAAO,CAACb,IAAI,CAACoB,KAAK,CAACC,UAAU,CAACC,GAAG,CAACC,OAAO,IAAI;QACvEC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACtB,CAAC,CAAC;MACJ,MAAMG,MAAM,GAAGb,OAAO,CAACb,IAAI,CAACoB,KAAK,CAACO,MAAM,CAACL,GAAG,CAACC,OAAO,IAAI;QACtD,OAAOA,OAAO,GAAE,GAAG;MACrB,CAAC,CAAC;MACFvB,IAAI,GAAG;QACLD,MAAM;QACN6B,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,YAAY;UACnB7B,IAAI,EAAE0B,MAAM;UACZI,WAAW,EAAE,mBAAmB;UAChCC,eAAe,EAAE;QACnB,CAAC;MAEL,CAAC;MACDnC,UAAU,CAACI,IAAI,CAAC;MAChBF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IACF,IAAIqB,YAAY,GAAG,UAASa,KAAK,EAAEC,GAAG,EAAE;MACpC,KAAI,IAAIC,GAAG,GAAC,EAAE,EAACC,EAAE,GAAC,IAAIC,IAAI,CAACJ,KAAK,CAAC,EAC/BG,EAAE,IAAE,IAAIC,IAAI,CAACH,GAAG,CAAC,EACjBE,EAAE,CAACE,OAAO,CAACF,EAAE,CAACG,OAAO,EAAE,GAAC,CAAC,CAAC,EAAC;QACzBJ,GAAG,CAACK,IAAI,CAAC3D,MAAM,CAAC,IAAIwD,IAAI,CAACD,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;MAChD;MACA,OAAOD,GAAG;IACd,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EAEL,IAAIrC,OAAO,EAAE;IACX,oBAAO,QAAC,SAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B;EAC9C;EACA,oBACE,QAAC,SAAS;IAAA,mCAEP,QAAC,IAAI;MAAC,OAAO,EAAEK,OAAQ;MAAC,IAAI,EAAEP;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACzC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEhB,CAAC;AAAC,GA/DID,WAAW;AAAA,KAAXA,WAAW;AAkEhB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}