{"ast":null,"code":"var _jsxFileName = \"/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/popularDomains.js\",\n  _s = $RefreshSig$();\nimport { UpdateModeEnum } from 'chart.js';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar list, result;\nconst PopularDomains = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/popular-domains\", {\n      mode: \"cors\"\n    }).then(response => {\n      return response.json();\n    }).then(dataRes => {\n      list = dataRes.rankingEntries;\n      result = JSON.parse(JSON.stringify(list));\n      result.forEach(function (obj) {\n        obj.rank = obj.rank + obj.rankChange;\n      });\n      result.sort(sortByProperty(\"rank\"));\n      setLoading(false);\n    });\n  }, []);\n  function getColor(value) {\n    if (value == 0) {\n      return 'RGB(255, 255, 255)';\n    } else {\n      return 'RGB(255,255,0)';\n    }\n  }\n  function sortByProperty(property) {\n    return function (a, b) {\n      if (a[property] > b[property]) return 1;else if (a[property] < b[property]) return -1;\n      return 0;\n    };\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"loading screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        'border': '2px solid forestgreen',\n        'display': 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), list.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.domain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        'border': '2px solid forestgreen',\n        'display': 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \" Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), result.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.domain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PopularDomains, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = PopularDomains;\nexport default PopularDomains;\nvar _c;\n$RefreshReg$(_c, \"PopularDomains\");","map":{"version":3,"names":["UpdateModeEnum","React","useEffect","useState","Container","list","result","PopularDomains","loading","setLoading","fetch","mode","then","response","json","dataRes","rankingEntries","JSON","parse","stringify","forEach","obj","rank","rankChange","sort","sortByProperty","getColor","value","property","a","b","map","item","backgroundColor","domain","category"],"sources":["/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/popularDomains.js"],"sourcesContent":["import { UpdateModeEnum } from 'chart.js';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nvar list, result;\n\nconst PopularDomains = () => {\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        fetch(\"https://workers.cnainani.workers.dev/popular-domains\", { mode: \"cors\" })\n            .then((response) => {\n                return response.json();\n            })\n            .then((dataRes) => {\n                list = dataRes.rankingEntries;\n                result = JSON.parse(JSON.stringify(list));\n                result.forEach(function (obj) {\n                    obj.rank = obj.rank + obj.rankChange\n                });\n                result.sort(sortByProperty(\"rank\"));\n                setLoading(false)\n            });\n    }, []);\n\n    function getColor(value) {\n        if (value == 0) {\n            return 'RGB(255, 255, 255)';\n        } else {\n            return 'RGB(255,255,0)';\n        }\n    }\n    function sortByProperty(property) {\n        return function (a, b) {\n            if (a[property] > b[property])\n                return 1;\n            else if (a[property] < b[property])\n                return -1;\n\n            return 0;\n        }\n    }\n    if (loading) {\n        return <Container>loading screen</Container>;\n    }\n    return (\n        <Container>\n            <table style={{ 'border': '2px solid forestgreen', 'display': 'inline-block' }}>\n                <tr>\n                    <th style={{ 'border': '2px solid forestgreen' }}>Rank</th>\n                    <th style={{ 'border': '2px solid forestgreen' }}>Domain</th>\n                    <th style={{ 'border': '2px solid forestgreen' }}>Category</th>\n                </tr>\n                {list.map(item => (\n                    <tr>\n                        <td style={{ backgroundColor: getColor(item.rankChange), 'border': '2px solid forestgreen' }}>{item.rank}</td>\n                        <td style={{ backgroundColor: getColor(item.rankChange), 'border': '2px solid forestgreen' }}>{item.domain}</td>\n                        <td style={{ backgroundColor: getColor(item.rankChange), 'border': '2px solid forestgreen' }}>{item.category}</td>\n                    </tr>\n                ))}\n            </table>\n            <table style={{ 'border': '2px solid forestgreen', 'display': 'inline-block' }}>\n                <tr>\n                    <th style={{ 'border': '2px solid forestgreen' }}> Rank</th>\n                    <th style={{ 'border': '2px solid forestgreen' }}>Domain</th>\n                    <th style={{ 'border': '2px solid forestgreen' }}>Category</th>\n                </tr>\n                {result.map(item => (\n                    <tr>\n                        <td style={{ backgroundColor: getColor(item.rankChange), 'border': '2px solid forestgreen' }}>{item.rank}</td>\n                        <td style={{ backgroundColor: getColor(item.rankChange), 'border': '2px solid forestgreen' }}>{item.domain}</td>\n                        <td style={{ backgroundColor: getColor(item.rankChange), 'border': '2px solid forestgreen' }}>{item.category}</td>\n                    </tr>\n                ))}\n            </table>\n            <hr></hr>\n        </Container>\n    );\n};\n\n\nexport default PopularDomains;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}