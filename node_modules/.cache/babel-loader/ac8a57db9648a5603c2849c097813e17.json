{"ast":null,"code":"var _jsxFileName = \"/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/popularDomains.js\",\n  _s = $RefreshSig$();\nimport { UpdateModeEnum } from 'chart.js';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar list, result;\nconst PopularDomains = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log(\"useeffect called\");\n    fetch(\"https://workers.cnainani.workers.dev/popular-domains\", {\n      mode: \"cors\"\n    }).then(response => {\n      console.log(\"response is:\" + response);\n      return response.json();\n    }).then(dataRes => {\n      list = dataRes.rankingEntries;\n      result = dataRes.rankingEntries;\n      console.log(JSON.stringify(list));\n      result.forEach(function (obj) {\n        obj.rank = obj.rank + obj.rankChange;\n      });\n      result.sort(sortByProperty(\"rank\"));\n      console.log(\"final result is:\" + JSON.stringify(result));\n      setLoading(false);\n    });\n  }, []);\n  function getColor(value) {\n    if (value == 0) {\n      return 'RGB(255, 255, 255)';\n    } else {\n      return 'RGB(255,255,0)';\n    }\n  }\n  function sortByProperty(property) {\n    return function (a, b) {\n      if (a[property] > b[property]) return 1;else if (a[property] < b[property]) return -1;\n      return 0;\n    };\n  }\n  if (loading) {\n    console.log(\"loading screen\");\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"loading screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        'border': '2px solid forestgreen',\n        'display': 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), list.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.domain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        'border': '2px solid forestgreen',\n        'display': 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \" Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Domain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            'border': '2px solid forestgreen'\n          },\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), result.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.domain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            backgroundColor: getColor(item.rankChange),\n            'border': '2px solid forestgreen'\n          },\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(PopularDomains, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = PopularDomains;\nexport default PopularDomains;\nvar _c;\n$RefreshReg$(_c, \"PopularDomains\");","map":{"version":3,"names":["UpdateModeEnum","React","useEffect","useState","Container","list","result","PopularDomains","loading","setLoading","console","log","fetch","mode","then","response","json","dataRes","rankingEntries","JSON","stringify","forEach","obj","rank","rankChange","sort","sortByProperty","getColor","value","property","a","b","map","item","backgroundColor","domain","category"],"sources":["/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/popularDomains.js"],"sourcesContent":["import { UpdateModeEnum } from 'chart.js';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nvar list,result;\n\nconst PopularDomains = () => {\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        console.log(\"useeffect called\");\n        fetch(\"https://workers.cnainani.workers.dev/popular-domains\", { mode: \"cors\" })\n        .then((response) => {\n          console.log(\"response is:\"+response);\n          return response.json();\n        })  \n        .then((dataRes) => {\n            list=dataRes.rankingEntries;\n            result=dataRes.rankingEntries;\n            console.log(JSON.stringify(list));\n            result.forEach(function(obj) { \n               obj.rank=obj.rank+obj.rankChange\n             });\n            result.sort(sortByProperty(\"rank\")); \n            console.log(\"final result is:\"+JSON.stringify(result));\n            setLoading(false)\n        });\n      },[]);\n    \n      function getColor(value){\n        if (value==0) {\n            return 'RGB(255, 255, 255)';\n        } else {\n            return 'RGB(255,255,0)';\n        }\n    }\n    function sortByProperty(property){  \n        return function(a,b){  \n           if(a[property] > b[property])  \n              return 1;  \n           else if(a[property] < b[property])  \n              return -1;  \n       \n           return 0;  \n        }  \n     }\n    if (loading) {\n      console.log(\"loading screen\");\n      return <Container>loading screen</Container>;\n    }\n    return (\n      <Container>\n        <table style={{'border': '2px solid forestgreen','display': 'inline-block'}}>\n        <tr>\n            <th style={{'border': '2px solid forestgreen'}}>Rank</th>\n            <th style={{'border': '2px solid forestgreen'}}>Domain</th>\n            <th style={{'border': '2px solid forestgreen'}}>Category</th>\n        </tr>\n    {list.map(item => (\n        <tr>\n        <td style={{backgroundColor: getColor(item.rankChange),'border': '2px solid forestgreen'}}>{item.rank}</td>\n        <td style={{backgroundColor: getColor(item.rankChange),'border': '2px solid forestgreen'}}>{item.domain}</td>\n        <td style={{backgroundColor: getColor(item.rankChange),'border': '2px solid forestgreen'}}>{item.category}</td>\n        </tr>\n    ))}\n        </table>\n        <table style={{'border': '2px solid forestgreen','display': 'inline-block'}}>\n        <tr>\n            <th style={{'border': '2px solid forestgreen'}}> Rank</th>\n            <th style={{'border': '2px solid forestgreen'}}>Domain</th>\n            <th style={{'border': '2px solid forestgreen'}}>Category</th>\n        </tr>\n    {result.map(item => (\n        <tr>\n         <td style={{backgroundColor: getColor(item.rankChange),'border': '2px solid forestgreen'}}>{item.rank}</td>\n        <td style={{backgroundColor: getColor(item.rankChange),'border': '2px solid forestgreen'}}>{item.domain}</td>\n        <td style={{backgroundColor: getColor(item.rankChange),'border': '2px solid forestgreen'}}>{item.category}</td>\n        </tr>\n    ))}\n        </table>\n      </Container>\n    );\n  };\n   \n\nexport default PopularDomains;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}