{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nvar CONSTANT = {\n  GLOBAL: {\n    HIDE: '__react_tooltip_hide_event',\n    REBUILD: '__react_tooltip_rebuild_event',\n    SHOW: '__react_tooltip_show_event'\n  }\n};\n\n/**\n * Static methods for react-tooltip\n */\n\nvar dispatchGlobalEvent = function dispatchGlobalEvent(eventName, opts) {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  var event;\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(eventName, {\n      detail: opts\n    });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, false, true, opts);\n  }\n  window.dispatchEvent(event);\n};\nfunction staticMethods(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = function (target) {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, {\n      target: target\n    });\n  };\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n\n  target.rebuild = function () {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n\n  target.show = function (target) {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, {\n      target: target\n    });\n  };\n  target.prototype.globalRebuild = function () {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n  target.prototype.globalShow = function (event) {\n    if (this.mount) {\n      var hasTarget = event && event.detail && event.detail.target && true || false; // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n\n      this.showTooltip({\n        currentTarget: hasTarget && event.detail.target\n      }, true);\n    }\n  };\n  target.prototype.globalHide = function (event) {\n    if (this.mount) {\n      var hasTarget = event && event.detail && event.detail.target && true || false;\n      this.hideTooltip({\n        currentTarget: hasTarget && event.detail.target\n      }, hasTarget);\n    }\n  };\n}\n\n/**\n * Events that should be bound to the window\n */\nfunction windowListener(target) {\n  target.prototype.bindWindowEvents = function (resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false); // ReactTooltip.rebuild\n\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false); // ReactTooltip.show\n\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false); // Resize\n\n    if (resizeHide) {\n      window.removeEventListener('resize', this.onWindowResize);\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  };\n  target.prototype.unbindWindowEvents = function () {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n  /**\n   * invoked by resize event of window\n   */\n\n  target.prototype.onWindowResize = function () {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n\n/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\nvar checkStatus = function checkStatus(dataEventOff, e) {\n  var show = this.state.show;\n  var id = this.props.id;\n  var isCapture = this.isCapture(e.currentTarget);\n  var currentItem = e.currentTarget.getAttribute('currentItem');\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === 'true') {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute('currentItem', 'true');\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\nvar setUntargetItems = function setUntargetItems(currentTarget, targetArray) {\n  for (var i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute('currentItem', 'false');\n    } else {\n      targetArray[i].setAttribute('currentItem', 'true');\n    }\n  }\n};\nvar customListeners = {\n  id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',\n  set: function set(target, event, listener) {\n    if (this.id in target) {\n      var map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: _defineProperty({}, event, listener)\n      });\n    }\n  },\n  get: function get(target, event) {\n    var map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\nfunction customEvent(target) {\n  target.prototype.isCustomEvent = function (ele) {\n    var event = this.state.event;\n    return event || !!ele.getAttribute('data-event');\n  };\n  /* Bind listener for custom event */\n\n  target.prototype.customBindListener = function (ele) {\n    var _this = this;\n    var _this$state = this.state,\n      event = _this$state.event,\n      eventOff = _this$state.eventOff;\n    var dataEvent = ele.getAttribute('data-event') || event;\n    var dataEventOff = ele.getAttribute('data-event-off') || eventOff;\n    dataEvent.split(' ').forEach(function (event) {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      var customListener = checkStatus.bind(_this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(' ').forEach(function (event) {\n        ele.removeEventListener(event, _this.hideTooltip);\n        ele.addEventListener(event, _this.hideTooltip, false);\n      });\n    }\n  };\n  /* Unbind listener for custom event */\n\n  target.prototype.customUnbindListener = function (ele) {\n    var _this$state2 = this.state,\n      event = _this$state2.event,\n      eventOff = _this$state2.eventOff;\n    var dataEvent = event || ele.getAttribute('data-event');\n    var dataEventOff = eventOff || ele.getAttribute('data-event-off');\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n\n/**\n * Util method to judge if it should follow capture model\n */\nfunction isCapture(target) {\n  target.prototype.isCapture = function (currentTarget) {\n    return currentTarget && currentTarget.getAttribute('data-iscapture') === 'true' || this.props.isCapture || false;\n  };\n}\n\n/**\n * Util method to get effect\n */\nfunction getEffect(target) {\n  target.prototype.getEffect = function (currentTarget) {\n    var dataEffect = currentTarget.getAttribute('data-effect');\n    return dataEffect || this.props.effect || 'float';\n  };\n}\n\n/**\n * Util method to get effect\n */\n\nvar makeProxy = function makeProxy(e) {\n  var proxy = {};\n  for (var key in e) {\n    if (typeof e[key] === 'function') {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\nvar bodyListener = function bodyListener(callback, options, e) {\n  var _options$respectEffec = options.respectEffect,\n    respectEffect = _options$respectEffec === void 0 ? false : _options$respectEffec,\n    _options$customEvent = options.customEvent,\n    customEvent = _options$customEvent === void 0 ? false : _options$customEvent;\n  var id = this.props.id;\n  var tip = e.target.getAttribute('data-tip') || null;\n  var forId = e.target.getAttribute('data-for') || null;\n  var target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n  var isTargetBelongsToTooltip = id == null && forId == null || forId === id;\n  if (tip != null && (!respectEffect || this.getEffect(target) === 'float') && isTargetBelongsToTooltip) {\n    var proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\nvar findCustomEvents = function findCustomEvents(targetArray, dataAttribute) {\n  var events = {};\n  targetArray.forEach(function (target) {\n    var event = target.getAttribute(dataAttribute);\n    if (event) event.split(' ').forEach(function (event) {\n      return events[event] = true;\n    });\n  });\n  return events;\n};\nvar getBody = function getBody() {\n  return document.getElementsByTagName('body')[0];\n};\nfunction bodyMode(target) {\n  target.prototype.isBodyMode = function () {\n    return !!this.props.bodyMode;\n  };\n  target.prototype.bindBodyListener = function (targetArray) {\n    var _this = this;\n    var _this$state = this.state,\n      event = _this$state.event,\n      eventOff = _this$state.eventOff,\n      possibleCustomEvents = _this$state.possibleCustomEvents,\n      possibleCustomEventsOff = _this$state.possibleCustomEventsOff;\n    var body = getBody();\n    var customEvents = findCustomEvents(targetArray, 'data-event');\n    var customEventsOff = findCustomEvents(targetArray, 'data-event-off');\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents.split(' ').forEach(function (event) {\n      return customEvents[event] = true;\n    });\n    possibleCustomEventsOff.split(' ').forEach(function (event) {\n      return customEventsOff[event] = true;\n    });\n    this.unbindBodyListener(body);\n    var listeners = this.bodyModeListeners = {};\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n    for (var _event in customEvents) {\n      listeners[_event] = bodyListener.bind(this, function (e) {\n        var targetEventOff = e.currentTarget.getAttribute('data-event-off') || eventOff;\n        checkStatus.call(_this, targetEventOff, e);\n      }, {\n        customEvent: true\n      });\n    }\n    for (var _event2 in customEventsOff) {\n      listeners[_event2] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n    for (var _event3 in listeners) {\n      body.addEventListener(_event3, listeners[_event3]);\n    }\n  };\n  target.prototype.unbindBodyListener = function (body) {\n    body = body || getBody();\n    var listeners = this.bodyModeListeners;\n    for (var event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n\n/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nvar getMutationObserverClass = function getMutationObserverClass() {\n  return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n};\nfunction trackRemoval(target) {\n  target.prototype.bindRemovalTracker = function () {\n    var _this = this;\n    var MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n    var observer = new MutationObserver(function (mutations) {\n      for (var m1 = 0; m1 < mutations.length; m1++) {\n        var mutation = mutations[m1];\n        for (var m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          var element = mutation.removedNodes[m2];\n          if (element === _this.state.currentTarget) {\n            _this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n    observer.observe(window.document, {\n      childList: true,\n      subtree: true\n    });\n    this.removalTracker = observer;\n  };\n  target.prototype.unbindRemovalTracker = function () {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n\n/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nfunction getPosition(e, target, node, place, desiredPlace, effect, offset) {\n  var _getDimensions = getDimensions(node),\n    tipWidth = _getDimensions.width,\n    tipHeight = _getDimensions.height;\n  var _getDimensions2 = getDimensions(target),\n    targetWidth = _getDimensions2.width,\n    targetHeight = _getDimensions2.height;\n  var _getCurrentOffset = getCurrentOffset(e, target, effect),\n    mouseX = _getCurrentOffset.mouseX,\n    mouseY = _getCurrentOffset.mouseY;\n  var defaultOffset = getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight);\n  var _calculateOffset = calculateOffset(offset),\n    extraOffsetX = _calculateOffset.extraOffsetX,\n    extraOffsetY = _calculateOffset.extraOffsetY;\n  var windowWidth = window.innerWidth;\n  var windowHeight = window.innerHeight;\n  var _getParent = getParent(node),\n    parentTop = _getParent.parentTop,\n    parentLeft = _getParent.parentLeft; // Get the edge offset of the tooltip\n\n  var getTipOffsetLeft = function getTipOffsetLeft(place) {\n    var offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  var getTipOffsetRight = function getTipOffsetRight(place) {\n    var offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  var getTipOffsetTop = function getTipOffsetTop(place) {\n    var offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n  var getTipOffsetBottom = function getTipOffsetBottom(place) {\n    var offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  }; //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n\n  var outsideLeft = function outsideLeft(p) {\n    return getTipOffsetLeft(p) < 0;\n  };\n  var outsideRight = function outsideRight(p) {\n    return getTipOffsetRight(p) > windowWidth;\n  };\n  var outsideTop = function outsideTop(p) {\n    return getTipOffsetTop(p) < 0;\n  };\n  var outsideBottom = function outsideBottom(p) {\n    return getTipOffsetBottom(p) > windowHeight;\n  }; // Check whether the tooltip with orientation p is completely inside the client window\n\n  var outside = function outside(p) {\n    return outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  };\n  var inside = function inside(p) {\n    return !outside(p);\n  };\n  var placesList = ['top', 'bottom', 'left', 'right'];\n  var insideList = [];\n  for (var i = 0; i < 4; i++) {\n    var p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n  var isNewState = false;\n  var newPlace;\n  var shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: {\n        place: newPlace\n      }\n    };\n  }\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\nvar getDimensions = function getDimensions(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    height = _node$getBoundingClie.height,\n    width = _node$getBoundingClie.width;\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n}; // Get current mouse offset\n\nvar getCurrentOffset = function getCurrentOffset(e, currentTarget, effect) {\n  var boundingClientRect = currentTarget.getBoundingClientRect();\n  var targetTop = boundingClientRect.top;\n  var targetLeft = boundingClientRect.left;\n  var _getDimensions3 = getDimensions(currentTarget),\n    targetWidth = _getDimensions3.width,\n    targetHeight = _getDimensions3.height;\n  if (effect === 'float') {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n}; // List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\n\nvar getDefaultPosition = function getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight) {\n  var top;\n  var right;\n  var bottom;\n  var left;\n  var disToMouse = 3;\n  var triangleHeight = 2;\n  var cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === 'float') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === 'solid') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n  return {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right\n  };\n}; // Consider additional offset into position calculation\n\nvar calculateOffset = function calculateOffset(offset) {\n  var extraOffsetX = 0;\n  var extraOffsetY = 0;\n  if (Object.prototype.toString.apply(offset) === '[object String]') {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n  for (var key in offset) {\n    if (key === 'top') {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === 'bottom') {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === 'left') {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === 'right') {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n  return {\n    extraOffsetX: extraOffsetX,\n    extraOffsetY: extraOffsetY\n  };\n}; // Get the offset of the parent elements\n\nvar getParent = function getParent(currentTarget) {\n  var currentParent = currentTarget;\n  while (currentParent) {\n    var computedStyle = window.getComputedStyle(currentParent); // transform and will-change: transform change the containing block\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block\n\n    if (computedStyle.getPropertyValue('transform') !== 'none' || computedStyle.getPropertyValue('will-change') === 'transform') break;\n    currentParent = currentParent.parentElement;\n  }\n  var parentTop = currentParent && currentParent.getBoundingClientRect().top || 0;\n  var parentLeft = currentParent && currentParent.getBoundingClientRect().left || 0;\n  return {\n    parentTop: parentTop,\n    parentLeft: parentLeft\n  };\n};\n\n/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nfunction getTipContent(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  var regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === 'false' || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  } // Multiline tooltip content\n\n  return tip.split(regexp).map(function (d, i) {\n    return React.createElement(\"span\", {\n      key: i,\n      className: \"multi-line\"\n    }, d);\n  });\n}\n\n/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nfunction parseAria(props) {\n  var ariaObj = {};\n  Object.keys(props).filter(function (prop) {\n    // aria-xxx and role is acceptable\n    return /(^aria-\\w+$|^role$)/.test(prop);\n  }).forEach(function (prop) {\n    ariaObj[prop] = props[prop];\n  });\n  return ariaObj;\n}\n\n/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\nfunction nodeListToArray(nodeList) {\n  var length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(function (index) {\n    return nodeList[index];\n  });\n}\nfunction generateUUID() {\n  return 't' + v4();\n}\nvar baseCss = \".__react_component_tooltip {\\n  border-radius: 3px;\\n  display: inline-block;\\n  font-size: 13px;\\n  left: -999em;\\n  opacity: 0;\\n  padding: 8px 21px;\\n  position: fixed;\\n  pointer-events: none;\\n  transition: opacity 0.3s ease-out;\\n  top: -999em;\\n  visibility: hidden;\\n  z-index: 999;\\n}\\n.__react_component_tooltip.allow_hover, .__react_component_tooltip.allow_click {\\n  pointer-events: auto;\\n}\\n.__react_component_tooltip::before, .__react_component_tooltip::after {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  position: absolute;\\n}\\n.__react_component_tooltip.show {\\n  opacity: 0.9;\\n  margin-top: 0;\\n  margin-left: 0;\\n  visibility: visible;\\n}\\n.__react_component_tooltip.place-top::before {\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  bottom: -8px;\\n  left: 50%;\\n  margin-left: -10px;\\n}\\n.__react_component_tooltip.place-bottom::before {\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  top: -8px;\\n  left: 50%;\\n  margin-left: -10px;\\n}\\n.__react_component_tooltip.place-left::before {\\n  border-top: 6px solid transparent;\\n  border-bottom: 6px solid transparent;\\n  right: -8px;\\n  top: 50%;\\n  margin-top: -5px;\\n}\\n.__react_component_tooltip.place-right::before {\\n  border-top: 6px solid transparent;\\n  border-bottom: 6px solid transparent;\\n  left: -8px;\\n  top: 50%;\\n  margin-top: -5px;\\n}\\n.__react_component_tooltip .multi-line {\\n  display: block;\\n  padding: 2px 0;\\n  text-align: center;\\n}\";\n\n/**\n * Default pop-up style values (text color, background color).\n */\nvar defaultColors = {\n  dark: {\n    text: '#fff',\n    background: '#222',\n    border: 'transparent',\n    arrow: '#222'\n  },\n  success: {\n    text: '#fff',\n    background: '#8DC572',\n    border: 'transparent',\n    arrow: '#8DC572'\n  },\n  warning: {\n    text: '#fff',\n    background: '#F0AD4E',\n    border: 'transparent',\n    arrow: '#F0AD4E'\n  },\n  error: {\n    text: '#fff',\n    background: '#BE6464',\n    border: 'transparent',\n    arrow: '#BE6464'\n  },\n  info: {\n    text: '#fff',\n    background: '#337AB7',\n    border: 'transparent',\n    arrow: '#337AB7'\n  },\n  light: {\n    text: '#222',\n    background: '#fff',\n    border: 'transparent',\n    arrow: '#fff'\n  }\n};\nfunction getDefaultPopupColors(type) {\n  return defaultColors[type] ? _objectSpread2({}, defaultColors[type]) : undefined;\n}\n\n/**\n * Generates the specific tooltip style for use on render.\n */\n\nfunction generateTooltipStyle(uuid, customColors, type, hasBorder) {\n  return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\n\nfunction generateStyle(uuid, colors) {\n  var textColor = colors.text;\n  var backgroundColor = colors.background;\n  var borderColor = colors.border;\n  var arrowColor = colors.arrow;\n  return \"\\n  \\t.\".concat(uuid, \" {\\n\\t    color: \").concat(textColor, \";\\n\\t    background: \").concat(backgroundColor, \";\\n\\t    border: 1px solid \").concat(borderColor, \";\\n  \\t}\\n\\n  \\t.\").concat(uuid, \".place-top {\\n        margin-top: -10px;\\n    }\\n    .\").concat(uuid, \".place-top::before {\\n        border-top: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-top::after {\\n        border-left: 8px solid transparent;\\n        border-right: 8px solid transparent;\\n        bottom: -6px;\\n        left: 50%;\\n        margin-left: -8px;\\n        border-top-color: \").concat(arrowColor, \";\\n        border-top-style: solid;\\n        border-top-width: 6px;\\n    }\\n\\n    .\").concat(uuid, \".place-bottom {\\n        margin-top: 10px;\\n    }\\n    .\").concat(uuid, \".place-bottom::before {\\n        border-bottom: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-bottom::after {\\n        border-left: 8px solid transparent;\\n        border-right: 8px solid transparent;\\n        top: -6px;\\n        left: 50%;\\n        margin-left: -8px;\\n        border-bottom-color: \").concat(arrowColor, \";\\n        border-bottom-style: solid;\\n        border-bottom-width: 6px;\\n    }\\n\\n    .\").concat(uuid, \".place-left {\\n        margin-left: -10px;\\n    }\\n    .\").concat(uuid, \".place-left::before {\\n        border-left: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-left::after {\\n        border-top: 5px solid transparent;\\n        border-bottom: 5px solid transparent;\\n        right: -6px;\\n        top: 50%;\\n        margin-top: -4px;\\n        border-left-color: \").concat(arrowColor, \";\\n        border-left-style: solid;\\n        border-left-width: 6px;\\n    }\\n\\n    .\").concat(uuid, \".place-right {\\n        margin-left: 10px;\\n    }\\n    .\").concat(uuid, \".place-right::before {\\n        border-right: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-right::after {\\n        border-top: 5px solid transparent;\\n        border-bottom: 5px solid transparent;\\n        left: -6px;\\n        top: 50%;\\n        margin-top: -4px;\\n        border-right-color: \").concat(arrowColor, \";\\n        border-right-style: solid;\\n        border-right-width: 6px;\\n    }\\n  \");\n}\nfunction getPopupColors(customColors, type, hasBorder) {\n  var textColor = customColors.text;\n  var backgroundColor = customColors.background;\n  var borderColor = customColors.border;\n  var arrowColor = customColors.arrow ? customColors.arrow : customColors.background;\n  var colors = getDefaultPopupColors(type);\n  if (textColor) {\n    colors.text = textColor;\n  }\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = type === 'light' ? 'black' : 'white';\n    }\n  }\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n  return colors;\n}\nvar _class, _class2, _temp;\nvar ReactTooltip = staticMethods(_class = windowListener(_class = customEvent(_class = isCapture(_class = getEffect(_class = bodyMode(_class = trackRemoval(_class = (_temp = _class2 = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReactTooltip, _React$Component);\n  _createClass(ReactTooltip, null, [{\n    key: \"propTypes\",\n    get: function get() {\n      return {\n        uuid: PropTypes.string,\n        children: PropTypes.any,\n        place: PropTypes.string,\n        type: PropTypes.string,\n        effect: PropTypes.string,\n        offset: PropTypes.object,\n        multiline: PropTypes.bool,\n        border: PropTypes.bool,\n        textColor: PropTypes.string,\n        backgroundColor: PropTypes.string,\n        borderColor: PropTypes.string,\n        arrowColor: PropTypes.string,\n        insecure: PropTypes.bool,\n        \"class\": PropTypes.string,\n        className: PropTypes.string,\n        id: PropTypes.string,\n        html: PropTypes.bool,\n        delayHide: PropTypes.number,\n        delayUpdate: PropTypes.number,\n        delayShow: PropTypes.number,\n        event: PropTypes.string,\n        eventOff: PropTypes.string,\n        isCapture: PropTypes.bool,\n        globalEventOff: PropTypes.string,\n        getContent: PropTypes.any,\n        afterShow: PropTypes.func,\n        afterHide: PropTypes.func,\n        overridePosition: PropTypes.func,\n        disable: PropTypes.bool,\n        scrollHide: PropTypes.bool,\n        resizeHide: PropTypes.bool,\n        wrapper: PropTypes.string,\n        bodyMode: PropTypes.bool,\n        possibleCustomEvents: PropTypes.string,\n        possibleCustomEventsOff: PropTypes.string,\n        clickable: PropTypes.bool\n      };\n    }\n  }]);\n  function ReactTooltip(props) {\n    var _this;\n    _classCallCheck(this, ReactTooltip);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactTooltip).call(this, props));\n    _this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || 'top',\n      // Direction of tooltip\n      desiredPlace: props.place || 'top',\n      type: 'dark',\n      // Color theme of tooltip\n      effect: 'float',\n      // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: '',\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null,\n      // Current mouse event\n      currentTarget: null,\n      // Current target of mouse event\n      ariaProps: parseAria(props),\n      // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || '',\n      possibleCustomEventsOff: props.possibleCustomEventsOff || '',\n      originTooltip: null,\n      isMultiline: false\n    };\n    _this.bind(['showTooltip', 'updateTooltip', 'hideTooltip', 'hideTooltipOnScroll', 'getTooltipContent', 'globalRebuild', 'globalShow', 'globalHide', 'onWindowResize', 'mouseOnToolTip']);\n    _this.mount = true;\n    _this.delayShowLoop = null;\n    _this.delayHideLoop = null;\n    _this.delayReshow = null;\n    _this.intervalUpdateContent = null;\n    return _this;\n  }\n  /**\n   * For unify the bind and unbind listener\n   */\n\n  _createClass(ReactTooltip, [{\n    key: \"bind\",\n    value: function bind(methodArray) {\n      var _this2 = this;\n      methodArray.forEach(function (method) {\n        _this2[method] = _this2[method].bind(_this2);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        insecure = _this$props.insecure,\n        resizeHide = _this$props.resizeHide;\n      this.bindListener(); // Bind listener for tooltip\n\n      this.bindWindowEvents(resizeHide); // Bind global event for static method\n\n      this.injectStyles(); // Inject styles for each DOM root having tooltip.\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mount = false;\n      this.clearTimer();\n      this.unbindListener();\n      this.removeScrollListener(this.state.currentTarget);\n      this.unbindWindowEvents();\n    }\n    /* Look for the closest DOM root having tooltip and inject styles. */\n  }, {\n    key: \"injectStyles\",\n    value: function injectStyles() {\n      var id = this.props.id;\n      var targetArray = this.getTargetArray(id);\n      var domRoots = [];\n      targetArray.forEach(function (target) {\n        var parentNode = target.parentNode;\n        while (parentNode.parentNode && !parentNode.host) {\n          parentNode = parentNode.parentNode;\n        }\n        var head = parentNode.querySelector('head');\n        domRoots.push(parentNode || head);\n      });\n      if (domRoots.length) {\n        var style = document.createElement('style');\n        style.textContent = baseCss;\n        style.setAttribute('data-react-tooltip', 'true');\n        domRoots.filter(function (item, idx, src) {\n          return src.indexOf(item) === idx;\n        }).forEach(function (domRoot) {\n          // Prevent styles duplication.\n          if (!domRoot.querySelector('style[data-react-tooltip]')) {\n            domRoot.appendChild(style);\n          }\n        });\n      }\n    }\n    /**\n     * Return if the mouse is on the tooltip.\n     * @returns {boolean} true - mouse is on the tooltip\n     */\n  }, {\n    key: \"mouseOnToolTip\",\n    value: function mouseOnToolTip() {\n      var show = this.state.show;\n      if (show && this.tooltipRef) {\n        /* old IE or Firefox work around */\n        if (!this.tooltipRef.matches) {\n          /* old IE work around */\n          if (this.tooltipRef.msMatchesSelector) {\n            this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n          } else {\n            /* old Firefox work around */\n            this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n          }\n        }\n        return this.tooltipRef.matches(':hover');\n      }\n      return false;\n    }\n    /**\n     * Pick out corresponded target elements\n     */\n  }, {\n    key: \"getTargetArray\",\n    value: function getTargetArray(id) {\n      var targetArray = [];\n      var selector;\n      if (!id) {\n        selector = '[data-tip]:not([data-for])';\n      } else {\n        var escaped = id.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n        selector = \"[data-tip][data-for=\\\"\".concat(escaped, \"\\\"]\");\n      } // Scan document for shadow DOM elements\n\n      nodeListToArray(document.getElementsByTagName('*')).filter(function (element) {\n        return element.shadowRoot;\n      }).forEach(function (element) {\n        targetArray = targetArray.concat(nodeListToArray(element.shadowRoot.querySelectorAll(selector)));\n      });\n      return targetArray.concat(nodeListToArray(document.querySelectorAll(selector)));\n    }\n    /**\n     * Bind listener to the target elements\n     * These listeners used to trigger showing or hiding the tooltip\n     */\n  }, {\n    key: \"bindListener\",\n    value: function bindListener() {\n      var _this3 = this;\n      var _this$props2 = this.props,\n        id = _this$props2.id,\n        globalEventOff = _this$props2.globalEventOff,\n        isCapture = _this$props2.isCapture;\n      var targetArray = this.getTargetArray(id);\n      targetArray.forEach(function (target) {\n        if (target.getAttribute('currentItem') === null) {\n          target.setAttribute('currentItem', 'false');\n        }\n        _this3.unbindBasicListener(target);\n        if (_this3.isCustomEvent(target)) {\n          _this3.customUnbindListener(target);\n        }\n      });\n      if (this.isBodyMode()) {\n        this.bindBodyListener(targetArray);\n      } else {\n        targetArray.forEach(function (target) {\n          var isCaptureMode = _this3.isCapture(target);\n          var effect = _this3.getEffect(target);\n          if (_this3.isCustomEvent(target)) {\n            _this3.customBindListener(target);\n            return;\n          }\n          target.addEventListener('mouseenter', _this3.showTooltip, isCaptureMode);\n          if (effect === 'float') {\n            target.addEventListener('mousemove', _this3.updateTooltip, isCaptureMode);\n          }\n          target.addEventListener('mouseleave', _this3.hideTooltip, isCaptureMode);\n        });\n      } // Global event to hide tooltip\n\n      if (globalEventOff) {\n        window.removeEventListener(globalEventOff, this.hideTooltip);\n        window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n      } // Track removal of targetArray elements from DOM\n\n      this.bindRemovalTracker();\n    }\n    /**\n     * Unbind listeners on target elements\n     */\n  }, {\n    key: \"unbindListener\",\n    value: function unbindListener() {\n      var _this4 = this;\n      var _this$props3 = this.props,\n        id = _this$props3.id,\n        globalEventOff = _this$props3.globalEventOff;\n      if (this.isBodyMode()) {\n        this.unbindBodyListener();\n      } else {\n        var targetArray = this.getTargetArray(id);\n        targetArray.forEach(function (target) {\n          _this4.unbindBasicListener(target);\n          if (_this4.isCustomEvent(target)) _this4.customUnbindListener(target);\n        });\n      }\n      if (globalEventOff) window.removeEventListener(globalEventOff, this.hideTooltip);\n      this.unbindRemovalTracker();\n    }\n    /**\n     * Invoke this before bind listener and unmount the component\n     * it is necessary to invoke this even when binding custom event\n     * so that the tooltip can switch between custom and default listener\n     */\n  }, {\n    key: \"unbindBasicListener\",\n    value: function unbindBasicListener(target) {\n      var isCaptureMode = this.isCapture(target);\n      target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);\n      target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);\n      target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n    }\n  }, {\n    key: \"getTooltipContent\",\n    value: function getTooltipContent() {\n      var _this$props4 = this.props,\n        getContent = _this$props4.getContent,\n        children = _this$props4.children; // Generate tooltip content\n\n      var content;\n      if (getContent) {\n        if (Array.isArray(getContent)) {\n          content = getContent[0] && getContent[0](this.state.originTooltip);\n        } else {\n          content = getContent(this.state.originTooltip);\n        }\n      }\n      return getTipContent(this.state.originTooltip, children, content, this.state.isMultiline);\n    }\n  }, {\n    key: \"isEmptyTip\",\n    value: function isEmptyTip(placeholder) {\n      return typeof placeholder === 'string' && placeholder === '' || placeholder === null;\n    }\n    /**\n     * When mouse enter, show the tooltip\n     */\n  }, {\n    key: \"showTooltip\",\n    value: function showTooltip(e, isGlobalCall) {\n      if (!this.tooltipRef) {\n        return;\n      }\n      if (isGlobalCall) {\n        // Don't trigger other elements belongs to other ReactTooltip\n        var targetArray = this.getTargetArray(this.props.id);\n        var isMyElement = targetArray.some(function (ele) {\n          return ele === e.currentTarget;\n        });\n        if (!isMyElement) return;\n      } // Get the tooltip content\n      // calculate in this phrase so that tip width height can be detected\n\n      var _this$props5 = this.props,\n        multiline = _this$props5.multiline,\n        getContent = _this$props5.getContent;\n      var originTooltip = e.currentTarget.getAttribute('data-tip');\n      var isMultiline = e.currentTarget.getAttribute('data-multiline') || multiline || false; // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n\n      var switchToSolid = e instanceof window.FocusEvent || isGlobalCall; // if it needs to skip adding hide listener to scroll\n\n      var scrollHide = true;\n      if (e.currentTarget.getAttribute('data-scroll-hide')) {\n        scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';\n      } else if (this.props.scrollHide != null) {\n        scrollHide = this.props.scrollHide;\n      } // Make sure the correct place is set\n\n      var desiredPlace = e.currentTarget.getAttribute('data-place') || this.props.place || 'top';\n      var effect = switchToSolid && 'solid' || this.getEffect(e.currentTarget);\n      var offset = e.currentTarget.getAttribute('data-offset') || this.props.offset || {};\n      var result = getPosition(e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);\n      if (result.position && this.props.overridePosition) {\n        result.position = this.props.overridePosition(result.position, e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);\n      }\n      var place = result.isNewState ? result.newState.place : desiredPlace; // To prevent previously created timers from triggering\n\n      this.clearTimer();\n      var target = e.currentTarget;\n      var reshowDelay = this.state.show ? target.getAttribute('data-delay-update') || this.props.delayUpdate : 0;\n      var self = this;\n      var updateState = function updateState() {\n        self.setState({\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute('data-type') || self.props.type || 'dark',\n          customColors: {\n            text: target.getAttribute('data-text-color') || self.props.textColor || null,\n            background: target.getAttribute('data-background-color') || self.props.backgroundColor || null,\n            border: target.getAttribute('data-border-color') || self.props.borderColor || null,\n            arrow: target.getAttribute('data-arrow-color') || self.props.arrowColor || null\n          },\n          effect: effect,\n          offset: offset,\n          html: (target.getAttribute('data-html') ? target.getAttribute('data-html') === 'true' : self.props.html) || false,\n          delayShow: target.getAttribute('data-delay-show') || self.props.delayShow || 0,\n          delayHide: target.getAttribute('data-delay-hide') || self.props.delayHide || 0,\n          delayUpdate: target.getAttribute('data-delay-update') || self.props.delayUpdate || 0,\n          border: (target.getAttribute('data-border') ? target.getAttribute('data-border') === 'true' : self.props.border) || false,\n          extraClass: target.getAttribute('data-class') || self.props[\"class\"] || self.props.className || '',\n          disable: (target.getAttribute('data-tip-disable') ? target.getAttribute('data-tip-disable') === 'true' : self.props.disable) || false,\n          currentTarget: target\n        }, function () {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n          self.updateTooltip(e);\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(function () {\n              if (self.mount) {\n                var _getContent = self.props.getContent;\n                var placeholder = getTipContent(originTooltip, '', _getContent[0](), isMultiline);\n                var isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({\n                  isEmptyTip: isEmptyTip\n                });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        });\n      }; // If there is no delay call immediately, don't allow events to get in first.\n\n      if (reshowDelay) {\n        this.delayReshow = setTimeout(updateState, reshowDelay);\n      } else {\n        updateState();\n      }\n    }\n    /**\n     * When mouse hover, update tool tip\n     */\n  }, {\n    key: \"updateTooltip\",\n    value: function updateTooltip(e) {\n      var _this5 = this;\n      var _this$state = this.state,\n        delayShow = _this$state.delayShow,\n        disable = _this$state.disable;\n      var afterShow = this.props.afterShow;\n      var placeholder = this.getTooltipContent();\n      var delayTime = parseInt(delayShow, 10);\n      var eventTarget = e.currentTarget || e.target; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n\n      if (this.mouseOnToolTip()) {\n        return;\n      } // if the tooltip is empty, disable the tooltip\n\n      if (this.isEmptyTip(placeholder) || disable) {\n        return;\n      }\n      var updateState = function updateState() {\n        if (Array.isArray(placeholder) && placeholder.length > 0 || placeholder) {\n          var isInvisible = !_this5.state.show;\n          _this5.setState({\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          }, function () {\n            _this5.updatePosition();\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          });\n        }\n      };\n      clearTimeout(this.delayShowLoop);\n      if (delayShow) {\n        this.delayShowLoop = setTimeout(updateState, delayTime);\n      } else {\n        updateState();\n      }\n    }\n    /*\n     * If we're mousing over the tooltip remove it when we leave.\n     */\n  }, {\n    key: \"listenForTooltipExit\",\n    value: function listenForTooltipExit() {\n      var show = this.state.show;\n      if (show && this.tooltipRef) {\n        this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);\n      }\n    }\n  }, {\n    key: \"removeListenerForTooltipExit\",\n    value: function removeListenerForTooltipExit() {\n      var show = this.state.show;\n      if (show && this.tooltipRef) {\n        this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);\n      }\n    }\n    /**\n     * When mouse leave, hide tooltip\n     */\n  }, {\n    key: \"hideTooltip\",\n    value: function hideTooltip(e, hasTarget) {\n      var _this6 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        isScroll: false\n      };\n      var disable = this.state.disable;\n      var isScroll = options.isScroll;\n      var delayHide = isScroll ? 0 : this.state.delayHide;\n      var afterHide = this.props.afterHide;\n      var placeholder = this.getTooltipContent();\n      if (!this.mount) return;\n      if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n\n      if (hasTarget) {\n        // Don't trigger other elements belongs to other ReactTooltip\n        var targetArray = this.getTargetArray(this.props.id);\n        var isMyElement = targetArray.some(function (ele) {\n          return ele === e.currentTarget;\n        });\n        if (!isMyElement || !this.state.show) return;\n      }\n      var resetState = function resetState() {\n        var isVisible = _this6.state.show; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n\n        if (_this6.mouseOnToolTip()) {\n          _this6.listenForTooltipExit();\n          return;\n        }\n        _this6.removeListenerForTooltipExit();\n        _this6.setState({\n          show: false\n        }, function () {\n          _this6.removeScrollListener(_this6.state.currentTarget);\n          if (isVisible && afterHide) {\n            afterHide(e);\n          }\n        });\n      };\n      this.clearTimer();\n      if (delayHide) {\n        this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n      } else {\n        resetState();\n      }\n    }\n    /**\n     * When scroll, hide tooltip\n     */\n  }, {\n    key: \"hideTooltipOnScroll\",\n    value: function hideTooltipOnScroll(event, hasTarget) {\n      this.hideTooltip(event, hasTarget, {\n        isScroll: true\n      });\n    }\n    /**\n     * Add scroll event listener when tooltip show\n     * automatically hide the tooltip when scrolling\n     */\n  }, {\n    key: \"addScrollListener\",\n    value: function addScrollListener(currentTarget) {\n      var isCaptureMode = this.isCapture(currentTarget);\n      window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n    }\n  }, {\n    key: \"removeScrollListener\",\n    value: function removeScrollListener(currentTarget) {\n      var isCaptureMode = this.isCapture(currentTarget);\n      window.removeEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n    } // Calculation the position\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var _this7 = this;\n      var _this$state2 = this.state,\n        currentEvent = _this$state2.currentEvent,\n        currentTarget = _this$state2.currentTarget,\n        place = _this$state2.place,\n        desiredPlace = _this$state2.desiredPlace,\n        effect = _this$state2.effect,\n        offset = _this$state2.offset;\n      var node = this.tooltipRef;\n      var result = getPosition(currentEvent, currentTarget, node, place, desiredPlace, effect, offset);\n      if (result.position && this.props.overridePosition) {\n        result.position = this.props.overridePosition(result.position, currentEvent, currentTarget, node, place, desiredPlace, effect, offset);\n      }\n      if (result.isNewState) {\n        // Switch to reverse placement\n        return this.setState(result.newState, function () {\n          _this7.updatePosition();\n        });\n      } // Set tooltip position\n\n      node.style.left = result.position.left + 'px';\n      node.style.top = result.position.top + 'px';\n    }\n    /**\n     * CLear all kinds of timeout of interval\n     */\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer() {\n      clearTimeout(this.delayShowLoop);\n      clearTimeout(this.delayHideLoop);\n      clearTimeout(this.delayReshow);\n      clearInterval(this.intervalUpdateContent);\n    }\n  }, {\n    key: \"hasCustomColors\",\n    value: function hasCustomColors() {\n      var _this8 = this;\n      return Boolean(Object.keys(this.state.customColors).find(function (color) {\n        return color !== 'border' && _this8.state.customColors[color];\n      }) || this.state.border && this.state.customColors['border']);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      var _this$state3 = this.state,\n        extraClass = _this$state3.extraClass,\n        html = _this$state3.html,\n        ariaProps = _this$state3.ariaProps,\n        disable = _this$state3.disable;\n      var content = this.getTooltipContent();\n      var isEmptyTip = this.isEmptyTip(content);\n      var style = generateTooltipStyle(this.state.uuid, this.state.customColors, this.state.type, this.state.border);\n      var tooltipClass = '__react_component_tooltip' + \" \".concat(this.state.uuid) + (this.state.show && !disable && !isEmptyTip ? ' show' : '') + (this.state.border ? ' border' : '') + \" place-\".concat(this.state.place) +\n      // top, bottom, left, right\n      \" type-\".concat(this.hasCustomColors() ? 'custom' : this.state.type) + (\n      // dark, success, warning, error, info, light, custom\n      this.props.delayUpdate ? ' allow_hover' : '') + (this.props.clickable ? ' allow_click' : '');\n      var Wrapper = this.props.wrapper;\n      if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n        Wrapper = ReactTooltip.defaultProps.wrapper;\n      }\n      var wrapperClassName = [tooltipClass, extraClass].filter(Boolean).join(' ');\n      if (html) {\n        var htmlContent = \"\".concat(content, \"\\n<style>\").concat(style, \"</style>\");\n        return React.createElement(Wrapper, _extends({\n          className: \"\".concat(wrapperClassName),\n          id: this.props.id,\n          ref: function ref(_ref) {\n            return _this9.tooltipRef = _ref;\n          }\n        }, ariaProps, {\n          \"data-id\": \"tooltip\",\n          dangerouslySetInnerHTML: {\n            __html: htmlContent\n          }\n        }));\n      } else {\n        return React.createElement(Wrapper, _extends({\n          className: \"\".concat(wrapperClassName),\n          id: this.props.id\n        }, ariaProps, {\n          ref: function ref(_ref2) {\n            return _this9.tooltipRef = _ref2;\n          },\n          \"data-id\": \"tooltip\"\n        }), React.createElement(\"style\", {\n          dangerouslySetInnerHTML: {\n            __html: style\n          }\n        }), content);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var ariaProps = prevState.ariaProps;\n      var newAriaProps = parseAria(nextProps);\n      var isChanged = Object.keys(newAriaProps).some(function (props) {\n        return newAriaProps[props] !== ariaProps[props];\n      });\n      if (!isChanged) {\n        return null;\n      }\n      return _objectSpread2({}, prevState, {\n        ariaProps: newAriaProps\n      });\n    }\n  }]);\n  return ReactTooltip;\n}(React.Component), _defineProperty(_class2, \"defaultProps\", {\n  insecure: true,\n  resizeHide: true,\n  wrapper: 'div',\n  clickable: false\n}), _defineProperty(_class2, \"supportedWrappers\", ['div', 'span']), _defineProperty(_class2, \"displayName\", 'ReactTooltip'), _temp)) || _class) || _class) || _class) || _class) || _class) || _class) || _class;\nexport default ReactTooltip;","map":{"version":3,"mappings":"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","names":["GLOBAL","HIDE","REBUILD","SHOW","dispatchGlobalEvent","eventName","opts","event","window","CustomEvent","detail","document","createEvent","initEvent","dispatchEvent","staticMethods","target","hide","CONSTANT","rebuild","show","prototype","globalRebuild","mount","unbindListener","bindListener","globalShow","hasTarget","showTooltip","currentTarget","globalHide","hideTooltip","windowListener","bindWindowEvents","resizeHide","removeEventListener","addEventListener","onWindowResize","unbindWindowEvents","checkStatus","dataEventOff","e","state","id","props","isCapture","currentItem","getAttribute","stopPropagation","setAttribute","setUntargetItems","getTargetArray","targetArray","i","length","customListeners","set","listener","map","Object","defineProperty","configurable","value","get","undefined","customEvent","isCustomEvent","ele","customBindListener","eventOff","dataEvent","split","forEach","customListener","bind","_this","customUnbindListener","getEffect","dataEffect","effect","makeProxy","proxy","key","bodyListener","callback","options","respectEffect","_options$customEvent","tip","forId","isTargetBelongsToTooltip","findCustomEvents","dataAttribute","events","getBody","getElementsByTagName","bodyMode","isBodyMode","bindBodyListener","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","unbindBodyListener","listeners","bodyModeListeners","mouseover","mousemove","updateTooltip","mouseout","targetEventOff","call","getMutationObserverClass","MutationObserver","WebKitMutationObserver","MozMutationObserver","trackRemoval","bindRemovalTracker","observer","m1","mutations","mutation","m2","removedNodes","element","observe","childList","subtree","removalTracker","unbindRemovalTracker","disconnect","getPosition","node","place","desiredPlace","offset","getDimensions","tipWidth","width","tipHeight","height","targetWidth","targetHeight","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","calculateOffset","extraOffsetX","extraOffsetY","windowWidth","innerWidth","windowHeight","innerHeight","getParent","parentTop","parentLeft","getTipOffsetLeft","offsetX","l","getTipOffsetRight","r","getTipOffsetTop","offsetY","t","getTipOffsetBottom","b","outsideLeft","p","outsideRight","outsideTop","outsideBottom","outside","inside","placesList","insideList","push","isNewState","newPlace","shouldUpdatePlace","newState","position","left","parseInt","top","getBoundingClientRect","boundingClientRect","targetTop","targetLeft","clientX","clientY","right","bottom","disToMouse","triangleHeight","cursorHeight","toString","apply","JSON","parse","replace","currentParent","computedStyle","getComputedStyle","getPropertyValue","parentElement","getTipContent","children","getContent","multiline","regexp","test","d","React","className","parseAria","ariaObj","keys","filter","prop","nodeListToArray","nodeList","hasOwnProperty","Array","slice","fill","index","generateUUID","uuid","defaultColors","dark","text","background","border","arrow","success","warning","error","info","light","getDefaultPopupColors","type","generateTooltipStyle","customColors","hasBorder","generateStyle","getPopupColors","colors","textColor","backgroundColor","borderColor","arrowColor","ReactTooltip","PropTypes","string","any","object","bool","insecure","html","delayHide","number","delayUpdate","delayShow","globalEventOff","afterShow","func","afterHide","overridePosition","disable","scrollHide","wrapper","clickable","_classCallCheck","extraClass","currentEvent","ariaProps","isEmptyTip","originTooltip","isMultiline","delayShowLoop","delayHideLoop","delayReshow","intervalUpdateContent","methodArray","_this2","method","injectStyles","clearTimer","removeScrollListener","domRoots","parentNode","host","head","querySelector","style","createElement","textContent","baseCss","item","idx","src","indexOf","domRoot","appendChild","tooltipRef","matches","msMatchesSelector","mozMatchesSelector","selector","escaped","shadowRoot","concat","querySelectorAll","_this3","unbindBasicListener","isCaptureMode","_this4","content","isArray","placeholder","isGlobalCall","isMyElement","some","switchToSolid","FocusEvent","result","reshowDelay","self","updateState","setState","addScrollListener","setInterval","updatePosition","setTimeout","getTooltipContent","delayTime","eventTarget","mouseOnToolTip","isInvisible","_this5","clearTimeout","isScroll","resetState","isVisible","_this6","listenForTooltipExit","removeListenerForTooltipExit","hideTooltipOnScroll","_this7","clearInterval","Boolean","find","color","_this8","tooltipClass","hasCustomColors","Wrapper","supportedWrappers","defaultProps","wrapperClassName","join","htmlContent","ref","_this9","dangerouslySetInnerHTML","__html","nextProps","prevState","newAriaProps","isChanged","Component"],"sources":["../src/constant.js","../src/decorators/staticMethods.js","../src/decorators/windowListener.js","../src/decorators/customEvent.js","../src/decorators/isCapture.js","../src/decorators/getEffect.js","../src/decorators/bodyMode.js","../src/decorators/trackRemoval.js","../src/utils/getPosition.js","../src/utils/getTipContent.js","../src/utils/aria.js","../src/utils/nodeListToArray.js","../src/utils/uuid.js","../src/decorators/defaultStyles.js","../src/decorators/styler.js","../src/index.js"],"sourcesContent":["export default {\n  GLOBAL: {\n    HIDE: '__react_tooltip_hide_event',\n    REBUILD: '__react_tooltip_rebuild_event',\n    SHOW: '__react_tooltip_show_event'\n  }\n};\n","/**\n * Static methods for react-tooltip\n */\nimport CONSTANT from '../constant';\n\nconst dispatchGlobalEvent = (eventName, opts) => {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  let event;\n\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(eventName, { detail: opts });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, false, true, opts);\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport default function(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, { target });\n  };\n\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n  target.rebuild = () => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n  target.show = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, { target });\n  };\n\n  target.prototype.globalRebuild = function() {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n      this.showTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        true\n      );\n    }\n  };\n\n  target.prototype.globalHide = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      this.hideTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        hasTarget\n      );\n    }\n  };\n}\n","/**\n * Events that should be bound to the window\n */\nimport CONSTANT from '../constant';\n\nexport default function(target) {\n  target.prototype.bindWindowEvents = function(resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false);\n\n    // ReactTooltip.rebuild\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false);\n\n    // ReactTooltip.show\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false);\n\n    // Resize\n    if (resizeHide) {\n      window.removeEventListener('resize', this.onWindowResize);\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function() {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n\n  /**\n   * invoked by resize event of window\n   */\n  target.prototype.onWindowResize = function() {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n","/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\nexport const checkStatus = function(dataEventOff, e) {\n  const { show } = this.state;\n  const { id } = this.props;\n  const isCapture = this.isCapture(e.currentTarget);\n  const currentItem = e.currentTarget.getAttribute('currentItem');\n\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === 'true') {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute('currentItem', 'true');\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nconst setUntargetItems = function(currentTarget, targetArray) {\n  for (let i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute('currentItem', 'false');\n    } else {\n      targetArray[i].setAttribute('currentItem', 'true');\n    }\n  }\n};\n\nconst customListeners = {\n  id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',\n  set(target, event, listener) {\n    if (this.id in target) {\n      const map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: { [event]: listener }\n      });\n    }\n  },\n  get(target, event) {\n    const map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\n\nexport default function(target) {\n  target.prototype.isCustomEvent = function(ele) {\n    const { event } = this.state;\n    return event || !!ele.getAttribute('data-event');\n  };\n\n  /* Bind listener for custom event */\n  target.prototype.customBindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = ele.getAttribute('data-event') || event;\n    const dataEventOff = ele.getAttribute('data-event-off') || eventOff;\n\n    dataEvent.split(' ').forEach(event => {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      const customListener = checkStatus.bind(this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(' ').forEach(event => {\n        ele.removeEventListener(event, this.hideTooltip);\n        ele.addEventListener(event, this.hideTooltip, false);\n      });\n    }\n  };\n\n  /* Unbind listener for custom event */\n  target.prototype.customUnbindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = event || ele.getAttribute('data-event');\n    const dataEventOff = eventOff || ele.getAttribute('data-event-off');\n\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n","/**\n * Util method to judge if it should follow capture model\n */\n\nexport default function(target) {\n  target.prototype.isCapture = function(currentTarget) {\n    return (\n      (currentTarget &&\n        currentTarget.getAttribute('data-iscapture') === 'true') ||\n      this.props.isCapture ||\n      false\n    );\n  };\n}\n","/**\n * Util method to get effect\n */\n\nexport default function(target) {\n  target.prototype.getEffect = function(currentTarget) {\n    const dataEffect = currentTarget.getAttribute('data-effect');\n    return dataEffect || this.props.effect || 'float';\n  };\n}\n","/**\n * Util method to get effect\n */\nimport { checkStatus } from './customEvent';\n\nconst makeProxy = e => {\n  const proxy = {};\n  for (const key in e) {\n    if (typeof e[key] === 'function') {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\n\nconst bodyListener = function(callback, options, e) {\n  const { respectEffect = false, customEvent = false } = options;\n  const { id } = this.props;\n\n  const tip = e.target.getAttribute('data-tip') || null;\n  const forId = e.target.getAttribute('data-for') || null;\n\n  const target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  const isTargetBelongsToTooltip =\n    (id == null && forId == null) || forId === id;\n\n  if (\n    tip != null &&\n    (!respectEffect || this.getEffect(target) === 'float') &&\n    isTargetBelongsToTooltip\n  ) {\n    const proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nconst findCustomEvents = (targetArray, dataAttribute) => {\n  const events = {};\n  targetArray.forEach(target => {\n    const event = target.getAttribute(dataAttribute);\n    if (event) event.split(' ').forEach(event => (events[event] = true));\n  });\n\n  return events;\n};\n\nconst getBody = () => document.getElementsByTagName('body')[0];\n\nexport default function(target) {\n  target.prototype.isBodyMode = function() {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function(targetArray) {\n    const {\n      event,\n      eventOff,\n      possibleCustomEvents,\n      possibleCustomEventsOff\n    } = this.state;\n    const body = getBody();\n\n    const customEvents = findCustomEvents(targetArray, 'data-event');\n    const customEventsOff = findCustomEvents(targetArray, 'data-event-off');\n\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents\n      .split(' ')\n      .forEach(event => (customEvents[event] = true));\n    possibleCustomEventsOff\n      .split(' ')\n      .forEach(event => (customEventsOff[event] = true));\n\n    this.unbindBodyListener(body);\n\n    const listeners = (this.bodyModeListeners = {});\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (const event in customEvents) {\n      listeners[event] = bodyListener.bind(\n        this,\n        e => {\n          const targetEventOff =\n            e.currentTarget.getAttribute('data-event-off') || eventOff;\n          checkStatus.call(this, targetEventOff, e);\n        },\n        { customEvent: true }\n      );\n    }\n    for (const event in customEventsOff) {\n      listeners[event] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n    for (const event in listeners) {\n      body.addEventListener(event, listeners[event]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function(body) {\n    body = body || getBody();\n\n    const listeners = this.bodyModeListeners;\n    for (const event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n","/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nconst getMutationObserverClass = () => {\n  return (\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver\n  );\n};\n\nexport default function(target) {\n  target.prototype.bindRemovalTracker = function() {\n    const MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n\n    const observer = new MutationObserver(mutations => {\n      for (let m1 = 0; m1 < mutations.length; m1++) {\n        const mutation = mutations[m1];\n        for (let m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          const element = mutation.removedNodes[m2];\n          if (element === this.state.currentTarget) {\n            this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(window.document, { childList: true, subtree: true });\n\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function() {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n","/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nexport default function(e, target, node, place, desiredPlace, effect, offset) {\n  const { width: tipWidth, height: tipHeight } = getDimensions(node);\n\n  const { width: targetWidth, height: targetHeight } = getDimensions(target);\n\n  const { mouseX, mouseY } = getCurrentOffset(e, target, effect);\n  const defaultOffset = getDefaultPosition(\n    effect,\n    targetWidth,\n    targetHeight,\n    tipWidth,\n    tipHeight\n  );\n  const { extraOffsetX, extraOffsetY } = calculateOffset(offset);\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const { parentTop, parentLeft } = getParent(node);\n\n  // Get the edge offset of the tooltip\n  const getTipOffsetLeft = place => {\n    const offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetRight = place => {\n    const offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetTop = place => {\n    const offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n  const getTipOffsetBottom = place => {\n    const offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  };\n\n  //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n  const outsideLeft = p => getTipOffsetLeft(p) < 0;\n  const outsideRight = p => getTipOffsetRight(p) > windowWidth;\n  const outsideTop = p => getTipOffsetTop(p) < 0;\n  const outsideBottom = p => getTipOffsetBottom(p) > windowHeight;\n\n  // Check whether the tooltip with orientation p is completely inside the client window\n  const outside = p =>\n    outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  const inside = p => !outside(p);\n\n  const placesList = ['top', 'bottom', 'left', 'right'];\n  const insideList = [];\n  for (let i = 0; i < 4; i++) {\n    const p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  let isNewState = false;\n  let newPlace;\n  const shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: { place: newPlace }\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\n\nconst getDimensions = node => {\n  const { height, width } = node.getBoundingClientRect();\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n};\n\n// Get current mouse offset\nconst getCurrentOffset = (e, currentTarget, effect) => {\n  const boundingClientRect = currentTarget.getBoundingClientRect();\n  const targetTop = boundingClientRect.top;\n  const targetLeft = boundingClientRect.left;\n  const { width: targetWidth, height: targetHeight } = getDimensions(\n    currentTarget\n  );\n\n  if (effect === 'float') {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n};\n\n// List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\nconst getDefaultPosition = (\n  effect,\n  targetWidth,\n  targetHeight,\n  tipWidth,\n  tipHeight\n) => {\n  let top;\n  let right;\n  let bottom;\n  let left;\n  const disToMouse = 3;\n  const triangleHeight = 2;\n  const cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === 'float') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === 'solid') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n\n  return { top, bottom, left, right };\n};\n\n// Consider additional offset into position calculation\nconst calculateOffset = offset => {\n  let extraOffsetX = 0;\n  let extraOffsetY = 0;\n\n  if (Object.prototype.toString.apply(offset) === '[object String]') {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n  for (const key in offset) {\n    if (key === 'top') {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === 'bottom') {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === 'left') {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === 'right') {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n\n  return { extraOffsetX, extraOffsetY };\n};\n\n// Get the offset of the parent elements\nconst getParent = currentTarget => {\n  let currentParent = currentTarget;\n  while (currentParent) {\n    const computedStyle = window.getComputedStyle(currentParent);\n    // transform and will-change: transform change the containing block\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block\n    if (\n      computedStyle.getPropertyValue('transform') !== 'none' ||\n      computedStyle.getPropertyValue('will-change') === 'transform'\n    )\n      break;\n    currentParent = currentParent.parentElement;\n  }\n\n  const parentTop =\n    (currentParent && currentParent.getBoundingClientRect().top) || 0;\n  const parentLeft =\n    (currentParent && currentParent.getBoundingClientRect().left) || 0;\n\n  return { parentTop, parentLeft };\n};\n","/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nimport React from 'react';\n\nexport default function(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  const regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === 'false' || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  }\n\n  // Multiline tooltip content\n  return tip.split(regexp).map((d, i) => {\n    return (\n      <span key={i} className=\"multi-line\">\n        {d}\n      </span>\n    );\n  });\n}\n","/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nexport function parseAria(props) {\n  const ariaObj = {};\n  Object.keys(props)\n    .filter(prop => {\n      // aria-xxx and role is acceptable\n      return /(^aria-\\w+$|^role$)/.test(prop);\n    })\n    .forEach(prop => {\n      ariaObj[prop] = props[prop];\n    });\n\n  return ariaObj;\n}\n","/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\nexport default function(nodeList) {\n  const length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(index => nodeList[index]);\n}\n","import { v4 as uuid } from 'uuid';\n\nexport function generateUUID() {\n  return 't' + uuid();\n}\n","/**\n * Default pop-up style values (text color, background color).\n */\nconst defaultColors = {\n  dark: {\n    text: '#fff',\n    background: '#222',\n    border: 'transparent',\n    arrow: '#222'\n  },\n  success: {\n    text: '#fff',\n    background: '#8DC572',\n    border: 'transparent',\n    arrow: '#8DC572'\n  },\n  warning: {\n    text: '#fff',\n    background: '#F0AD4E',\n    border: 'transparent',\n    arrow: '#F0AD4E'\n  },\n  error: {\n    text: '#fff',\n    background: '#BE6464',\n    border: 'transparent',\n    arrow: '#BE6464'\n  },\n  info: {\n    text: '#fff',\n    background: '#337AB7',\n    border: 'transparent',\n    arrow: '#337AB7'\n  },\n  light: {\n    text: '#222',\n    background: '#fff',\n    border: 'transparent',\n    arrow: '#fff'\n  }\n};\n\nexport function getDefaultPopupColors(type) {\n  return defaultColors[type] ? { ...defaultColors[type] } : undefined;\n}\n","import { getDefaultPopupColors } from './defaultStyles';\n\n/**\n * Generates the specific tooltip style for use on render.\n */\nexport function generateTooltipStyle(uuid, customColors, type, hasBorder) {\n  return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\nfunction generateStyle(uuid, colors) {\n  const textColor = colors.text;\n  const backgroundColor = colors.background;\n  const borderColor = colors.border;\n  const arrowColor = colors.arrow;\n\n  return `\n  \t.${uuid} {\n\t    color: ${textColor};\n\t    background: ${backgroundColor};\n\t    border: 1px solid ${borderColor};\n  \t}\n\n  \t.${uuid}.place-top {\n        margin-top: -10px;\n    }\n    .${uuid}.place-top::before {\n        border-top: 8px solid ${borderColor};\n    }\n    .${uuid}.place-top::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        bottom: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-top-color: ${arrowColor};\n        border-top-style: solid;\n        border-top-width: 6px;\n    }\n\n    .${uuid}.place-bottom {\n        margin-top: 10px;\n    }\n    .${uuid}.place-bottom::before {\n        border-bottom: 8px solid ${borderColor};\n    }\n    .${uuid}.place-bottom::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        top: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-bottom-color: ${arrowColor};\n        border-bottom-style: solid;\n        border-bottom-width: 6px;\n    }\n\n    .${uuid}.place-left {\n        margin-left: -10px;\n    }\n    .${uuid}.place-left::before {\n        border-left: 8px solid ${borderColor};\n    }\n    .${uuid}.place-left::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        right: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-left-color: ${arrowColor};\n        border-left-style: solid;\n        border-left-width: 6px;\n    }\n\n    .${uuid}.place-right {\n        margin-left: 10px;\n    }\n    .${uuid}.place-right::before {\n        border-right: 8px solid ${borderColor};\n    }\n    .${uuid}.place-right::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        left: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-right-color: ${arrowColor};\n        border-right-style: solid;\n        border-right-width: 6px;\n    }\n  `;\n}\n\nfunction getPopupColors(customColors, type, hasBorder) {\n  const textColor = customColors.text;\n  const backgroundColor = customColors.background;\n  const borderColor = customColors.border;\n  const arrowColor = customColors.arrow\n    ? customColors.arrow\n    : customColors.background;\n\n  const colors = getDefaultPopupColors(type);\n\n  if (textColor) {\n    colors.text = textColor;\n  }\n\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = type === 'light' ? 'black' : 'white';\n    }\n  }\n\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n\n  return colors;\n}\n","/* eslint-disable no-unused-vars, dot-notation */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Decorators */\nimport staticMethods from './decorators/staticMethods';\nimport windowListener from './decorators/windowListener';\nimport customEvent from './decorators/customEvent';\nimport isCapture from './decorators/isCapture';\nimport getEffect from './decorators/getEffect';\nimport bodyMode from './decorators/bodyMode';\nimport trackRemoval from './decorators/trackRemoval';\n\n/* Utils */\nimport getPosition from './utils/getPosition';\nimport getTipContent from './utils/getTipContent';\nimport { parseAria } from './utils/aria';\nimport nodeListToArray from './utils/nodeListToArray';\nimport { generateUUID } from './utils/uuid';\n\n/* CSS */\nimport baseCss from './index.scss';\nimport { generateTooltipStyle } from './decorators/styler';\n\n@staticMethods\n@windowListener\n@customEvent\n@isCapture\n@getEffect\n@bodyMode\n@trackRemoval\nclass ReactTooltip extends React.Component {\n  static get propTypes() {\n    return {\n      uuid: PropTypes.string,\n      children: PropTypes.any,\n      place: PropTypes.string,\n      type: PropTypes.string,\n      effect: PropTypes.string,\n      offset: PropTypes.object,\n      multiline: PropTypes.bool,\n      border: PropTypes.bool,\n      textColor: PropTypes.string,\n      backgroundColor: PropTypes.string,\n      borderColor: PropTypes.string,\n      arrowColor: PropTypes.string,\n      insecure: PropTypes.bool,\n      class: PropTypes.string,\n      className: PropTypes.string,\n      id: PropTypes.string,\n      html: PropTypes.bool,\n      delayHide: PropTypes.number,\n      delayUpdate: PropTypes.number,\n      delayShow: PropTypes.number,\n      event: PropTypes.string,\n      eventOff: PropTypes.string,\n      isCapture: PropTypes.bool,\n      globalEventOff: PropTypes.string,\n      getContent: PropTypes.any,\n      afterShow: PropTypes.func,\n      afterHide: PropTypes.func,\n      overridePosition: PropTypes.func,\n      disable: PropTypes.bool,\n      scrollHide: PropTypes.bool,\n      resizeHide: PropTypes.bool,\n      wrapper: PropTypes.string,\n      bodyMode: PropTypes.bool,\n      possibleCustomEvents: PropTypes.string,\n      possibleCustomEventsOff: PropTypes.string,\n      clickable: PropTypes.bool\n    };\n  }\n\n  static defaultProps = {\n    insecure: true,\n    resizeHide: true,\n    wrapper: 'div',\n    clickable: false\n  };\n\n  static supportedWrappers = ['div', 'span'];\n\n  static displayName = 'ReactTooltip';\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || 'top', // Direction of tooltip\n      desiredPlace: props.place || 'top',\n      type: 'dark', // Color theme of tooltip\n      effect: 'float', // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: '',\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null, // Current mouse event\n      currentTarget: null, // Current target of mouse event\n      ariaProps: parseAria(props), // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || '',\n      possibleCustomEventsOff: props.possibleCustomEventsOff || '',\n      originTooltip: null,\n      isMultiline: false\n    };\n\n    this.bind([\n      'showTooltip',\n      'updateTooltip',\n      'hideTooltip',\n      'hideTooltipOnScroll',\n      'getTooltipContent',\n      'globalRebuild',\n      'globalShow',\n      'globalHide',\n      'onWindowResize',\n      'mouseOnToolTip'\n    ]);\n\n    this.mount = true;\n    this.delayShowLoop = null;\n    this.delayHideLoop = null;\n    this.delayReshow = null;\n    this.intervalUpdateContent = null;\n  }\n\n  /**\n   * For unify the bind and unbind listener\n   */\n  bind(methodArray) {\n    methodArray.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { insecure, resizeHide } = this.props;\n\n    this.bindListener(); // Bind listener for tooltip\n    this.bindWindowEvents(resizeHide); // Bind global event for static method\n    this.injectStyles(); // Inject styles for each DOM root having tooltip.\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ariaProps } = prevState;\n    const newAriaProps = parseAria(nextProps);\n    const isChanged = Object.keys(newAriaProps).some(props => {\n      return newAriaProps[props] !== ariaProps[props];\n    });\n    if (!isChanged) {\n      return null;\n    }\n    return {\n      ...prevState,\n      ariaProps: newAriaProps\n    };\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n\n    this.clearTimer();\n\n    this.unbindListener();\n    this.removeScrollListener(this.state.currentTarget);\n    this.unbindWindowEvents();\n  }\n\n  /* Look for the closest DOM root having tooltip and inject styles. */\n  injectStyles() {\n    const { id } = this.props;\n    const targetArray = this.getTargetArray(id);\n    const domRoots = [];\n    targetArray.forEach(target => {\n      let parentNode = target.parentNode;\n      while (parentNode.parentNode && !parentNode.host) {\n        parentNode = parentNode.parentNode;\n      }\n      const head = parentNode.querySelector('head');\n      domRoots.push(parentNode || head);\n    });\n    if (domRoots.length) {\n      const style = document.createElement('style');\n      style.textContent = baseCss;\n      style.setAttribute('data-react-tooltip', 'true');\n      domRoots\n        .filter((item, idx, src) => src.indexOf(item) === idx)\n        .forEach(domRoot => {\n          // Prevent styles duplication.\n          if (!domRoot.querySelector('style[data-react-tooltip]')) {\n            domRoot.appendChild(style);\n          }\n        });\n    }\n  }\n\n  /**\n   * Return if the mouse is on the tooltip.\n   * @returns {boolean} true - mouse is on the tooltip\n   */\n  mouseOnToolTip() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      /* old IE or Firefox work around */\n      if (!this.tooltipRef.matches) {\n        /* old IE work around */\n        if (this.tooltipRef.msMatchesSelector) {\n          this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n        } else {\n          /* old Firefox work around */\n          this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n        }\n      }\n      return this.tooltipRef.matches(':hover');\n    }\n    return false;\n  }\n\n  /**\n   * Pick out corresponded target elements\n   */\n  getTargetArray(id) {\n    let targetArray = [];\n    let selector;\n    if (!id) {\n      selector = '[data-tip]:not([data-for])';\n    } else {\n      const escaped = id.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n      selector = `[data-tip][data-for=\"${escaped}\"]`;\n    }\n\n    // Scan document for shadow DOM elements\n    nodeListToArray(document.getElementsByTagName('*'))\n      .filter(element => element.shadowRoot)\n      .forEach(element => {\n        targetArray = targetArray.concat(\n          nodeListToArray(element.shadowRoot.querySelectorAll(selector))\n        );\n      });\n    return targetArray.concat(\n      nodeListToArray(document.querySelectorAll(selector))\n    );\n  }\n\n  /**\n   * Bind listener to the target elements\n   * These listeners used to trigger showing or hiding the tooltip\n   */\n  bindListener() {\n    const { id, globalEventOff, isCapture } = this.props;\n    const targetArray = this.getTargetArray(id);\n\n    targetArray.forEach(target => {\n      if (target.getAttribute('currentItem') === null) {\n        target.setAttribute('currentItem', 'false');\n      }\n      this.unbindBasicListener(target);\n      if (this.isCustomEvent(target)) {\n        this.customUnbindListener(target);\n      }\n    });\n\n    if (this.isBodyMode()) {\n      this.bindBodyListener(targetArray);\n    } else {\n      targetArray.forEach(target => {\n        const isCaptureMode = this.isCapture(target);\n        const effect = this.getEffect(target);\n        if (this.isCustomEvent(target)) {\n          this.customBindListener(target);\n          return;\n        }\n\n        target.addEventListener('mouseenter', this.showTooltip, isCaptureMode);\n        if (effect === 'float') {\n          target.addEventListener(\n            'mousemove',\n            this.updateTooltip,\n            isCaptureMode\n          );\n        }\n        target.addEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n      });\n    }\n\n    // Global event to hide tooltip\n    if (globalEventOff) {\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n      window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n    }\n\n    // Track removal of targetArray elements from DOM\n    this.bindRemovalTracker();\n  }\n\n  /**\n   * Unbind listeners on target elements\n   */\n  unbindListener() {\n    const { id, globalEventOff } = this.props;\n    if (this.isBodyMode()) {\n      this.unbindBodyListener();\n    } else {\n      const targetArray = this.getTargetArray(id);\n      targetArray.forEach(target => {\n        this.unbindBasicListener(target);\n        if (this.isCustomEvent(target)) this.customUnbindListener(target);\n      });\n    }\n\n    if (globalEventOff)\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n    this.unbindRemovalTracker();\n  }\n\n  /**\n   * Invoke this before bind listener and unmount the component\n   * it is necessary to invoke this even when binding custom event\n   * so that the tooltip can switch between custom and default listener\n   */\n  unbindBasicListener(target) {\n    const isCaptureMode = this.isCapture(target);\n    target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);\n    target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);\n    target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n  }\n\n  getTooltipContent() {\n    const { getContent, children } = this.props;\n\n    // Generate tooltip content\n    let content;\n    if (getContent) {\n      if (Array.isArray(getContent)) {\n        content = getContent[0] && getContent[0](this.state.originTooltip);\n      } else {\n        content = getContent(this.state.originTooltip);\n      }\n    }\n\n    return getTipContent(\n      this.state.originTooltip,\n      children,\n      content,\n      this.state.isMultiline\n    );\n  }\n\n  isEmptyTip(placeholder) {\n    return (\n      (typeof placeholder === 'string' && placeholder === '') ||\n      placeholder === null\n    );\n  }\n\n  /**\n   * When mouse enter, show the tooltip\n   */\n  showTooltip(e, isGlobalCall) {\n    if (!this.tooltipRef) {\n      return;\n    }\n\n    if (isGlobalCall) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement) return;\n    }\n    // Get the tooltip content\n    // calculate in this phrase so that tip width height can be detected\n    const { multiline, getContent } = this.props;\n    const originTooltip = e.currentTarget.getAttribute('data-tip');\n    const isMultiline =\n      e.currentTarget.getAttribute('data-multiline') || multiline || false;\n\n    // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n    const switchToSolid = e instanceof window.FocusEvent || isGlobalCall;\n\n    // if it needs to skip adding hide listener to scroll\n    let scrollHide = true;\n    if (e.currentTarget.getAttribute('data-scroll-hide')) {\n      scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';\n    } else if (this.props.scrollHide != null) {\n      scrollHide = this.props.scrollHide;\n    }\n\n    // Make sure the correct place is set\n    const desiredPlace =\n      e.currentTarget.getAttribute('data-place') || this.props.place || 'top';\n    const effect =\n      (switchToSolid && 'solid') || this.getEffect(e.currentTarget);\n    const offset =\n      e.currentTarget.getAttribute('data-offset') || this.props.offset || {};\n    const result = getPosition(\n      e,\n      e.currentTarget,\n      this.tooltipRef,\n      desiredPlace,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        e,\n        e.currentTarget,\n        this.tooltipRef,\n        desiredPlace,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    const place = result.isNewState ? result.newState.place : desiredPlace;\n\n    // To prevent previously created timers from triggering\n    this.clearTimer();\n\n    const target = e.currentTarget;\n\n    const reshowDelay = this.state.show\n      ? target.getAttribute('data-delay-update') || this.props.delayUpdate\n      : 0;\n\n    const self = this;\n\n    const updateState = function updateState() {\n      self.setState(\n        {\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute('data-type') || self.props.type || 'dark',\n          customColors: {\n            text:\n              target.getAttribute('data-text-color') ||\n              self.props.textColor ||\n              null,\n            background:\n              target.getAttribute('data-background-color') ||\n              self.props.backgroundColor ||\n              null,\n            border:\n              target.getAttribute('data-border-color') ||\n              self.props.borderColor ||\n              null,\n            arrow:\n              target.getAttribute('data-arrow-color') ||\n              self.props.arrowColor ||\n              null\n          },\n          effect: effect,\n          offset: offset,\n          html:\n            (target.getAttribute('data-html')\n              ? target.getAttribute('data-html') === 'true'\n              : self.props.html) || false,\n          delayShow:\n            target.getAttribute('data-delay-show') || self.props.delayShow || 0,\n          delayHide:\n            target.getAttribute('data-delay-hide') || self.props.delayHide || 0,\n          delayUpdate:\n            target.getAttribute('data-delay-update') ||\n            self.props.delayUpdate ||\n            0,\n          border:\n            (target.getAttribute('data-border')\n              ? target.getAttribute('data-border') === 'true'\n              : self.props.border) || false,\n          extraClass:\n            target.getAttribute('data-class') ||\n            self.props.class ||\n            self.props.className ||\n            '',\n          disable:\n            (target.getAttribute('data-tip-disable')\n              ? target.getAttribute('data-tip-disable') === 'true'\n              : self.props.disable) || false,\n          currentTarget: target\n        },\n        () => {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(() => {\n              if (self.mount) {\n                const { getContent } = self.props;\n                const placeholder = getTipContent(\n                  originTooltip,\n                  '',\n                  getContent[0](),\n                  isMultiline\n                );\n                const isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({ isEmptyTip });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        }\n      );\n    };\n\n    // If there is no delay call immediately, don't allow events to get in first.\n    if (reshowDelay) {\n      this.delayReshow = setTimeout(updateState, reshowDelay);\n    } else {\n      updateState();\n    }\n  }\n\n  /**\n   * When mouse hover, update tool tip\n   */\n  updateTooltip(e) {\n    const { delayShow, disable } = this.state;\n    const { afterShow } = this.props;\n    const placeholder = this.getTooltipContent();\n    const delayTime = parseInt(delayShow, 10);\n    const eventTarget = e.currentTarget || e.target;\n\n    // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n    if (this.mouseOnToolTip()) {\n      return;\n    }\n\n    // if the tooltip is empty, disable the tooltip\n    if (this.isEmptyTip(placeholder) || disable) {\n      return;\n    }\n\n    const updateState = () => {\n      if (\n        (Array.isArray(placeholder) && placeholder.length > 0) ||\n        placeholder\n      ) {\n        const isInvisible = !this.state.show;\n        this.setState(\n          {\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          },\n          () => {\n            this.updatePosition();\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          }\n        );\n      }\n    };\n\n    clearTimeout(this.delayShowLoop);\n    if (delayShow) {\n      this.delayShowLoop = setTimeout(updateState, delayTime);\n    } else {\n      updateState();\n    }\n  }\n\n  /*\n   * If we're mousing over the tooltip remove it when we leave.\n   */\n  listenForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  removeListenerForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  /**\n   * When mouse leave, hide tooltip\n   */\n  hideTooltip(e, hasTarget, options = { isScroll: false }) {\n    const { disable } = this.state;\n    const { isScroll } = options;\n    const delayHide = isScroll ? 0 : this.state.delayHide;\n    const { afterHide } = this.props;\n    const placeholder = this.getTooltipContent();\n    if (!this.mount) return;\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    if (hasTarget) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement || !this.state.show) return;\n    }\n\n    const resetState = () => {\n      const isVisible = this.state.show;\n      // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n      if (this.mouseOnToolTip()) {\n        this.listenForTooltipExit();\n        return;\n      }\n\n      this.removeListenerForTooltipExit();\n\n      this.setState({ show: false }, () => {\n        this.removeScrollListener(this.state.currentTarget);\n        if (isVisible && afterHide) {\n          afterHide(e);\n        }\n      });\n    };\n\n    this.clearTimer();\n    if (delayHide) {\n      this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n    } else {\n      resetState();\n    }\n  }\n\n  /**\n   * When scroll, hide tooltip\n   */\n  hideTooltipOnScroll(event, hasTarget) {\n    this.hideTooltip(event, hasTarget, { isScroll: true });\n  }\n\n  /**\n   * Add scroll event listener when tooltip show\n   * automatically hide the tooltip when scrolling\n   */\n  addScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  removeScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.removeEventListener(\n      'scroll',\n      this.hideTooltipOnScroll,\n      isCaptureMode\n    );\n  }\n\n  // Calculation the position\n  updatePosition() {\n    const {\n      currentEvent,\n      currentTarget,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    } = this.state;\n    const node = this.tooltipRef;\n    const result = getPosition(\n      currentEvent,\n      currentTarget,\n      node,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        currentEvent,\n        currentTarget,\n        node,\n        place,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    if (result.isNewState) {\n      // Switch to reverse placement\n      return this.setState(result.newState, () => {\n        this.updatePosition();\n      });\n    }\n\n    // Set tooltip position\n    node.style.left = result.position.left + 'px';\n    node.style.top = result.position.top + 'px';\n  }\n\n  /**\n   * CLear all kinds of timeout of interval\n   */\n  clearTimer() {\n    clearTimeout(this.delayShowLoop);\n    clearTimeout(this.delayHideLoop);\n    clearTimeout(this.delayReshow);\n    clearInterval(this.intervalUpdateContent);\n  }\n\n  hasCustomColors() {\n    return Boolean(\n      Object.keys(this.state.customColors).find(\n        color => color !== 'border' && this.state.customColors[color]\n      ) ||\n        (this.state.border && this.state.customColors['border'])\n    );\n  }\n\n  render() {\n    const { extraClass, html, ariaProps, disable } = this.state;\n    const content = this.getTooltipContent();\n    const isEmptyTip = this.isEmptyTip(content);\n    const style = generateTooltipStyle(\n      this.state.uuid,\n      this.state.customColors,\n      this.state.type,\n      this.state.border\n    );\n\n    const tooltipClass =\n      '__react_component_tooltip' +\n      ` ${this.state.uuid}` +\n      (this.state.show && !disable && !isEmptyTip ? ' show' : '') +\n      (this.state.border ? ' border' : '') +\n      ` place-${this.state.place}` + // top, bottom, left, right\n      ` type-${this.hasCustomColors() ? 'custom' : this.state.type}` + // dark, success, warning, error, info, light, custom\n      (this.props.delayUpdate ? ' allow_hover' : '') +\n      (this.props.clickable ? ' allow_click' : '');\n\n    let Wrapper = this.props.wrapper;\n\n    if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n      Wrapper = ReactTooltip.defaultProps.wrapper;\n    }\n\n    const wrapperClassName = [tooltipClass, extraClass]\n      .filter(Boolean)\n      .join(' ');\n\n    if (html) {\n      const htmlContent = `${content}\\n<style>${style}</style>`;\n\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id}\n          ref={ref => (this.tooltipRef = ref)}\n          {...ariaProps}\n          data-id=\"tooltip\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      );\n    } else {\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id}\n          {...ariaProps}\n          ref={ref => (this.tooltipRef = ref)}\n          data-id=\"tooltip\"\n        >\n          <style dangerouslySetInnerHTML={{ __html: style }} />\n          {content}\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default ReactTooltip;\n"]},"metadata":{},"sourceType":"module"}