{"ast":null,"code":"var _jsxFileName = \"/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/attackLayer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst AttackChart = () => {\n  _s();\n  const [content, setContent] = useState({});\n  const [loading, setLoading] = useState(true);\n  var labels, data, arrChart;\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Attack Layer'\n      },\n      tooltip: {\n        callbacks: {\n          label: function () {\n            let label = \"A chart with Layer 3 DDoS Attack over the last 30 Days.\";\n            return label;\n          }\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", {\n      mode: \"cors\"\n    }).then(response => {\n      return response.json();\n    }).then(dataRes => {\n      dataRes.data.total.timestamps = dataRes.data.total.timestamps.map(element => {\n        let date = element.split('T')[0];\n        let time = format(new Date(element), \"HH:mm\");\n        return date + \" \" + time;\n      });\n      labels = dataRes.data.total.timestamps;\n      const result = dataRes.data.total.values.map(element => {\n        return element * 100;\n      });\n      data = {\n        labels,\n        datasets: [{\n          label: 'Percentage',\n          data: result,\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)'\n        }]\n      };\n      setContent(data);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: \"loading screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"TASK 3:\", /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(AttackChart, \"KC7p3+cA2gzMK8Z2JbraU/FoTXc=\");\n_c = AttackChart;\nexport default AttackChart;\nvar _c;\n$RefreshReg$(_c, \"AttackChart\");","map":{"version":3,"names":["useEffect","useState","Container","format","React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","AttackChart","content","setContent","loading","setLoading","labels","data","arrChart","options","responsive","plugins","title","display","text","tooltip","callbacks","label","fetch","mode","then","response","json","dataRes","total","timestamps","map","element","date","split","time","Date","result","values","datasets","borderColor","backgroundColor"],"sources":["/Users/chetnaajaynainani/Desktop/cc/pages/src/pages/attackLayer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { format } from 'date-fns'\nimport React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst AttackChart = () => {\n    const [content, setContent] = useState({});\n    const [loading, setLoading] = useState(true);\n    var labels, data, arrChart;\n    const options = {\n        responsive: true,\n        plugins: {\n            title: {\n                display: true,\n                text: 'Attack Layer',\n            },\n            tooltip: {\n                callbacks: {\n                    label: function () {\n                        let label = \"A chart with Layer 3 DDoS Attack over the last 30 Days.\";\n                        return label;\n                    }\n                }\n            },\n        },\n    };\n    useEffect(() => {\n        fetch(\"https://workers.cnainani.workers.dev/attack-layer3\", { mode: \"cors\" })\n            .then((response) => {\n                return response.json();\n            })\n            .then((dataRes) => {\n                dataRes.data.total.timestamps = dataRes.data.total.timestamps.map(element => {\n                    let date = element.split('T')[0];\n                    let time = format(new Date(element), \"HH:mm\");\n                    return date + \" \" + time;\n                });\n                labels = dataRes.data.total.timestamps;\n                const result = dataRes.data.total.values.map(element => {\n                    return element * 100;\n                });\n                data = {\n                    labels,\n                    datasets: [\n                        {\n                            label: 'Percentage',\n                            data: result,\n                            borderColor: 'rgb(255, 99, 132)',\n                            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                        },\n                    ],\n                };\n                setContent(data);\n                setLoading(false);\n            });\n    }, []);\n\n    if (loading) {\n        return <Container>loading screen</Container>;\n    }\n    return (\n        <Container>\n            TASK 3:\n            <Line options={options} data={content} />\n            <hr></hr>\n        </Container>\n    );\n};\n\n\nexport default AttackChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}